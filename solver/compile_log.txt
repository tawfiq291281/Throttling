wmake myPhaseChangeTwoPhaseMixture
    ln: ./lnInclude
Making dependencies: Lee.C
Making dependencies: myPhaseChangeTwoPhaseMixture.C
g++ -std=c++17 -m64 -pthread -DOPENFOAM=2412 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -Wno-unknown-pragmas -O3  -DNoRepository -ftemplate-depth-100  -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/meshTools/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels/twoPhaseMixture/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels/incompressible/lnInclude -iquote. -IlnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OSspecific/POSIX/lnInclude   -fPIC -c myPhaseChangeTwoPhaseMixture/myPhaseChangeTwoPhaseMixture.C -o Make/linux64GccDPInt32Opt/myPhaseChangeTwoPhaseMixture/myPhaseChangeTwoPhaseMixture.o
g++ -std=c++17 -m64 -pthread -DOPENFOAM=2412 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -Wno-unknown-pragmas -O3  -DNoRepository -ftemplate-depth-100  -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/meshTools/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels/twoPhaseMixture/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels/incompressible/lnInclude -iquote. -IlnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OSspecific/POSIX/lnInclude   -fPIC -c Lee/Lee.C -o Make/linux64GccDPInt32Opt/Lee/Lee.o
g++ -std=c++17 -m64 -pthread -DOPENFOAM=2412 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -Wno-unknown-pragmas -O3  -DNoRepository -ftemplate-depth-100  -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/meshTools/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels/twoPhaseMixture/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels/incompressible/lnInclude -iquote. -IlnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OSspecific/POSIX/lnInclude   -fPIC -shared -Xlinker --add-needed -Xlinker --no-as-needed  Make/linux64GccDPInt32Opt/myPhaseChangeTwoPhaseMixture/myPhaseChangeTwoPhaseMixture.o Make/linux64GccDPInt32Opt/Lee/Lee.o -L/home/tawfiq/OpenFOAM/OpenFOAM-2412/platforms/linux64GccDPInt32Opt/lib \
    -lfiniteVolume -lmeshTools -ltwoPhaseMixture -ltwoPhaseProperties -lincompressibleTransportModels  -o /home/tawfiq/OpenFOAM/OpenFOAM-2412/platforms/linux64GccDPInt32Opt/lib/libphaseChangeTwoPhaseMixtures.so
Making dependencies: ttt.C
g++ -std=c++17 -m64 -pthread -DOPENFOAM=2412 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -Wno-unknown-pragmas -O3  -DNoRepository -ftemplate-depth-100  -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/meshTools/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/sampling/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels/twoPhaseMixture/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels/incompressible/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/transportModels/interfaceProperties/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/TurbulenceModels/turbulenceModels/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/TurbulenceModels/compressible/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/TurbulenceModels/incompressible/lnInclude -ImyPhaseChangeTwoPhaseMixture/lnInclude -iquote. -IlnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude -I/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OSspecific/POSIX/lnInclude   -fPIC -c ttt.C -o Make/linux64GccDPInt32Opt/ttt.o
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULES.H:226,
                 from ttt.C:25:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C: In instantiation of ‘void Foam::MULES::limiter(Foam::scalarField&, const RdeltaTType&, const RhoType&, const Foam::volScalarField&, const Foam::surfaceScalarField&, const Foam::surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&) [with RdeltaTType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = Foam::dimensioned<double>; PsiMinType = Foam::dimensioned<double>; Foam::scalarField = Foam::Field<double>; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:634:5:   required from ‘void Foam::MULES::limit(const RdeltaTType&, const RhoType&, const Foam::volScalarField&, const Foam::surfaceScalarField&, Foam::surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&, bool) [with RdeltaTType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = Foam::dimensioned<double>; PsiMinType = Foam::dimensioned<double>; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:173:14:   required from ‘void Foam::MULES::explicitSolve(const RhoType&, Foam::volScalarField&, const Foam::surfaceScalarField&, Foam::surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&) [with RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = Foam::dimensioned<double>; PsiMinType = Foam::dimensioned<double>; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’
alphaEqn.H:42:9:   required from here
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:282:13: error: no match for ‘operator=’ (operand types are ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} and ‘const Foam::dimensioned<double>’)
  282 |     psiMaxn = psiMin;
      |     ~~~~~~~~^~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:41,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:59,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.H:43,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:41,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TimeState.H:41,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Time.H:50,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvCFD.H:4,
                 from ttt.C:24:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:491:21: note: candidate: ‘template<class Addr> void Foam::Field<Type>::operator=(const Foam::IndirectListBase<T, Addr>&) [with Type = double]’
  491 |         inline void operator=(const IndirectListBase<Type, Addr>& rhs);
      |                     ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:491:21: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:282:13: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::IndirectListBase<double, Addr>’
  282 |     psiMaxn = psiMin;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:498:21: note: candidate: ‘template<int SizeMin> void Foam::Field<Type>::operator=(Foam::DynamicList<T, SizeMin>&&) [with int SizeMin = SizeMin; Type = double]’
  498 |         inline void operator=(DynamicList<Type, SizeMin>&& rhs);
      |                     ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:498:21: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:282:13: note:   types ‘Foam::DynamicList<double, SizeMin>’ and ‘const Foam::dimensioned<double>’ have incompatible cv-qualifiers
  282 |     psiMaxn = psiMin;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:507:14: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt> void Foam::Field<Type>::operator=(const Foam::VectorSpace<Form, Cmpt, nCmpt>&) [with Cmpt = Form; unsigned char nCmpt = Cmpt; Type = double]’
  507 |         void operator=(const VectorSpace<Form,Cmpt,nCmpt>&);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:507:14: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:282:13: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  282 |     psiMaxn = psiMin;
      |     ~~~~~~~~^~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:551:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:754:6: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::Field<Type>&) [with Type = double]’
  754 | void Foam::Field<Type>::operator=(const Field<Type>& rhs)
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:754:54: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::Field<double>&’
  754 | void Foam::Field<Type>::operator=(const Field<Type>& rhs)
      |                                   ~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:766:6: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::tmp<Foam::Field<Type> >&) [with Type = double]’
  766 | void Foam::Field<Type>::operator=(const tmp<Field>& rhs)
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:766:53: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::tmp<Foam::Field<double> >&’
  766 | void Foam::Field<Type>::operator=(const tmp<Field>& rhs)
      |                                   ~~~~~~~~~~~~~~~~~~^~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:547:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:158:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::UList<T>&) [with Type = double]’
  158 | inline void Foam::Field<Type>::operator=(const UList<Type>& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:158:61: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::UList<double>&’
  158 | inline void Foam::Field<Type>::operator=(const UList<Type>& rhs)
      |                                          ~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:165:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::SubField<Type>&) [with Type = double]’
  165 | inline void Foam::Field<Type>::operator=(const SubField<Type>& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:165:64: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::SubField<double>&’
  165 | inline void Foam::Field<Type>::operator=(const SubField<Type>& rhs)
      |                                          ~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:183:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::Field<Type>&&) [with Type = double]’
  183 | inline void Foam::Field<Type>::operator=(Field<Type>&& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:183:56: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::Field<double>&&’
  183 | inline void Foam::Field<Type>::operator=(Field<Type>&& rhs)
      |                                          ~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:190:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::List<T>&&) [with Type = double]’
  190 | inline void Foam::Field<Type>::operator=(List<Type>&& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:190:55: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::List<double>&&’
  190 | inline void Foam::Field<Type>::operator=(List<Type>&& rhs)
      |                                          ~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:205:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Type&) [with Type = double]’
  205 | inline void Foam::Field<Type>::operator=(const Type& val)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:205:54: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const double&’
  205 | inline void Foam::Field<Type>::operator=(const Type& val)
      |                                          ~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:212:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::zero) [with Type = double]’
  212 | inline void Foam::Field<Type>::operator=(const Foam::zero)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:212:42: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::zero’
  212 | inline void Foam::Field<Type>::operator=(const Foam::zero)
      |                                          ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:283:13: error: no match for ‘operator=’ (operand types are ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} and ‘const Foam::dimensioned<double>’)
  283 |     psiMinn = psiMax;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:491:21: note: candidate: ‘template<class Addr> void Foam::Field<Type>::operator=(const Foam::IndirectListBase<T, Addr>&) [with Type = double]’
  491 |         inline void operator=(const IndirectListBase<Type, Addr>& rhs);
      |                     ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:491:21: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:283:13: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::IndirectListBase<double, Addr>’
  283 |     psiMinn = psiMax;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:498:21: note: candidate: ‘template<int SizeMin> void Foam::Field<Type>::operator=(Foam::DynamicList<T, SizeMin>&&) [with int SizeMin = SizeMin; Type = double]’
  498 |         inline void operator=(DynamicList<Type, SizeMin>&& rhs);
      |                     ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:498:21: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:283:13: note:   types ‘Foam::DynamicList<double, SizeMin>’ and ‘const Foam::dimensioned<double>’ have incompatible cv-qualifiers
  283 |     psiMinn = psiMax;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:507:14: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt> void Foam::Field<Type>::operator=(const Foam::VectorSpace<Form, Cmpt, nCmpt>&) [with Cmpt = Form; unsigned char nCmpt = Cmpt; Type = double]’
  507 |         void operator=(const VectorSpace<Form,Cmpt,nCmpt>&);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:507:14: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:283:13: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  283 |     psiMinn = psiMax;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:754:6: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::Field<Type>&) [with Type = double]’
  754 | void Foam::Field<Type>::operator=(const Field<Type>& rhs)
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:754:54: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::Field<double>&’
  754 | void Foam::Field<Type>::operator=(const Field<Type>& rhs)
      |                                   ~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:766:6: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::tmp<Foam::Field<Type> >&) [with Type = double]’
  766 | void Foam::Field<Type>::operator=(const tmp<Field>& rhs)
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:766:53: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::tmp<Foam::Field<double> >&’
  766 | void Foam::Field<Type>::operator=(const tmp<Field>& rhs)
      |                                   ~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:158:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::UList<T>&) [with Type = double]’
  158 | inline void Foam::Field<Type>::operator=(const UList<Type>& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:158:61: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::UList<double>&’
  158 | inline void Foam::Field<Type>::operator=(const UList<Type>& rhs)
      |                                          ~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:165:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::SubField<Type>&) [with Type = double]’
  165 | inline void Foam::Field<Type>::operator=(const SubField<Type>& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:165:64: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::SubField<double>&’
  165 | inline void Foam::Field<Type>::operator=(const SubField<Type>& rhs)
      |                                          ~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:183:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::Field<Type>&&) [with Type = double]’
  183 | inline void Foam::Field<Type>::operator=(Field<Type>&& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:183:56: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::Field<double>&&’
  183 | inline void Foam::Field<Type>::operator=(Field<Type>&& rhs)
      |                                          ~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:190:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::List<T>&&) [with Type = double]’
  190 | inline void Foam::Field<Type>::operator=(List<Type>&& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:190:55: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::List<double>&&’
  190 | inline void Foam::Field<Type>::operator=(List<Type>&& rhs)
      |                                          ~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:205:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Type&) [with Type = double]’
  205 | inline void Foam::Field<Type>::operator=(const Type& val)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:205:54: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const double&’
  205 | inline void Foam::Field<Type>::operator=(const Type& val)
      |                                          ~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:212:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::zero) [with Type = double]’
  212 | inline void Foam::Field<Type>::operator=(const Foam::zero)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:212:42: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::zero’
  212 | inline void Foam::Field<Type>::operator=(const Foam::zero)
      |                                          ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:357:35: error: cannot convert ‘Foam::dimensioned<double>’ to ‘const Foam::scalar’ {aka ‘const double’} in initialization
  357 |                      const scalar extrema =
      |                                   ^~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: error: no match for ‘operator+’ (operand types are ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} and ‘Foam::dimensioned<double>’)
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zero.H:129,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UList.H:51,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/List.H:47,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/instantList.H:38,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TimePaths.H:42,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Time.H:44:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:45:30: note: candidate: ‘template<class Type> constexpr const Type& Foam::operator+(const Type&, const zero&)’
   45 | inline constexpr const Type& operator+(const Type& val, const zero&) noexcept
      |                              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:45:30: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   cannot convert ‘Foam::operator*(const dimensioned<double>&, const dimensioned<Type>&) [with Type = double](Foam::operator-(const dimensioned<Type>&, const dimensioned<Type>&) [with Type = double]((* & psiMin)))’ (type ‘Foam::dimensioned<double>’) to type ‘const Foam::zero&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:51:30: note: candidate: ‘template<class Type> constexpr const Type& Foam::operator+(const zero&, const Type&)’
   51 | inline constexpr const Type& operator+(const zero&, const Type& val) noexcept
      |                              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:51:30: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:19: note:   cannot convert ‘psiMaxn’ (type ‘Foam::scalarField’ {aka ‘Foam::Field<double>’}) to type ‘const Foam::zero&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ^~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpace.H:276,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:54:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:730:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  730 | inline Form operator+
      |             ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:730:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/MinMax.H:306,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.H:32,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:548:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/MinMaxOps.H:316:18: note: candidate: ‘template<class T> Foam::MinMax<Type> Foam::operator+(const MinMax<Type>&, const MinMax<Type>&)’
  316 | inline MinMax<T> operator+(const MinMax<T>& x, const MinMax<T>& y)
      |                  ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/MinMaxOps.H:316:18: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::MinMax<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:835:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:782:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const UList<T>&, const UList<Key>&)’
  782 | operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:782:1: note:   template argument deduction/substitution failed:
  782 | operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<Key>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:792:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const UList<T>&, const tmp<Field<Type2> >&)’
  792 | operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:792:1: note:   template argument deduction/substitution failed:
  792 | operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type2> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:803:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<Field<Type> >&, const UList<Key>&)’
  803 | operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:803:1: note:   template argument deduction/substitution failed:
  803 | operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:814:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<Field<Type> >&, const tmp<Field<Type2> >&)’
  814 | operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:814:1: note:   template argument deduction/substitution failed:
  814 | operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:839:1: note: candidate: ‘template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const UList<T>&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  839 | operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:839:1: note:   template argument deduction/substitution failed:
  839 | operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:849:1: note: candidate: ‘template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<Field<Type> >&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  849 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:849:1: note:   template argument deduction/substitution failed:
  849 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:877:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const UList<Type>&)’
  877 | operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:877:1: note:   template argument deduction/substitution failed:
  877 | operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:887:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<Field<Type> >&)’
  887 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:887:1: note:   template argument deduction/substitution failed:
  887 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Tensor.H:397,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:29,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensor.H:316,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/symmTensor.H:47,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/fieldTypes.H:46,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/flipOp.H:43,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:31,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/mapDistributeBase.H:1222,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldMapper.H:38,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:29:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:939:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const SphericalTensor<Cmpt>&, const Tensor<Cmpt>&)’
  939 | operator+(const SphericalTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:939:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SphericalTensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:953:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Tensor<Cmpt>&, const SphericalTensor<Cmpt>&)’
  953 | operator+(const Tensor<Cmpt>& t1, const SphericalTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:953:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:967:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const SymmTensor<Cmpt>&, const Tensor<Cmpt>&)’
  967 | operator+(const SymmTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:967:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SymmTensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:981:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Tensor<Cmpt>&, const SymmTensor<Cmpt>&)’
  981 | operator+(const Tensor<Cmpt>& t1, const SymmTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:981:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:651:1: note: candidate: ‘template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator+(const SphericalTensor<Cmpt>&, const SymmTensor<Cmpt>&)’
  651 | operator+(const SphericalTensor<Cmpt>& spt1, const SymmTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:651:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SphericalTensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:665:1: note: candidate: ‘template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator+(const SymmTensor<Cmpt>&, const SphericalTensor<Cmpt>&)’
  665 | operator+(const SymmTensor<Cmpt>& st1, const SphericalTensor<Cmpt>& spt2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:665:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SymmTensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.H:638,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/RectangularMatrix.H:45,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarMatrices.H:45,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSets.H:40,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:437:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:778:7: note: candidate: ‘template<class Form1, class Form2, class Type> Form1 Foam::operator+(const Matrix<Form1, Type>&, const Matrix<Form2, Type>&)’
  778 | Form1 operator+
      |       ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:778:7: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Matrix<Form1, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:872:6: note: candidate: ‘template<class Form, class Type> Form Foam::operator+(const Type&, const Matrix<Form, Type>&)’
  872 | Form operator+(const Type& s, const Matrix<Form, Type>& mat)
      |      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:872:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::Matrix<Form, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:890:6: note: candidate: ‘template<class Form, class Type> Form Foam::operator+(const Matrix<Form, Type>&, const Type&)’
  890 | Form operator+(const Matrix<Form, Type>& mat, const Type& s)
      |      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:890:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Matrix<Form, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.H:577:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:820:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::operator+(const dimensioned<Type>&, const dimensioned<Type>&)’
  820 | Foam::dimensioned<Type> Foam::operator+
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:820:25: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:32,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.H:159,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:29,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedField.H:643,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SlicedDimensionedField.H:39,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMesh.H:63,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvCFD.H:5:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:549:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const dimensioned<double>&, const DimensionedField<double, GeoMesh>&)’
  549 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:549:44: note:   template argument deduction/substitution failed:
  549 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:569:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const scalar&, const DimensionedField<double, GeoMesh>&)’
  569 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:569:44: note:   template argument deduction/substitution failed:
  569 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:580:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const dimensioned<double>&, const tmp<DimensionedField<double, GeoMesh> >&)’
  580 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:580:44: note:   template argument deduction/substitution failed:
  580 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:603:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const scalar&, const tmp<DimensionedField<double, GeoMesh> >&)’
  603 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:603:44: note:   template argument deduction/substitution failed:
  603 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:629:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const DimensionedField<double, GeoMesh>&, const dimensioned<double>&)’
  629 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:629:44: note:   template argument deduction/substitution failed:
  629 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const DimensionedField<double, GeoMesh>&, const scalar&)’
  649 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note:   template argument deduction/substitution failed:
  649 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:660:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const tmp<DimensionedField<double, GeoMesh> >&, const dimensioned<double>&)’
  660 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:660:44: note:   template argument deduction/substitution failed:
  660 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:683:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const tmp<DimensionedField<double, GeoMesh> >&, const scalar&)’
  683 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:683:44: note:   template argument deduction/substitution failed:
  683 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedField.C:611,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedField.H:646:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:416:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const DimensionedField<TypeR, GeoMesh>&, const DimensionedField<Type1, GeoMesh>&)’
  416 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:416:1: note:   template argument deduction/substitution failed:
  416 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<TypeR, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:440:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const DimensionedField<TypeR, GeoMesh>&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  440 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:440:1: note:   template argument deduction/substitution failed:
  440 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<TypeR, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:467:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const tmp<DimensionedField<TypeR, GeoMesh> >&, const DimensionedField<Type1, GeoMesh>&)’
  467 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:467:1: note:   template argument deduction/substitution failed:
  467 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:494:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const tmp<DimensionedField<TypeR, GeoMesh> >&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  494 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:494:1: note:   template argument deduction/substitution failed:
  494 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:525:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator+(const DimensionedField<Type1, GeoMesh>&, const dimensioned<Type>&)’
  525 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:525:1: note:   template argument deduction/substitution failed:
  525 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type1, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:549:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const DimensionedField<Type2, GeoMesh>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  549 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:549:1: note:   template argument deduction/substitution failed:
  549 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type2, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:561:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator+(const tmp<DimensionedField<Type1, GeoMesh> >&, const dimensioned<Type>&)’
  561 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:561:1: note:   template argument deduction/substitution failed:
  561 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:588:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const tmp<DimensionedField<Type2, GeoMesh> >&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  588 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:588:1: note:   template argument deduction/substitution failed:
  588 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type2, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:600:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const dimensioned<Type>&, const DimensionedField<Type1, GeoMesh>&)’
  600 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:600:1: note:   template argument deduction/substitution failed:
  600 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:624:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const DimensionedField<Type2, GeoMesh>&)’
  624 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:624:1: note:   template argument deduction/substitution failed:
  624 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:636:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const dimensioned<Type>&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  636 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:636:1: note:   template argument deduction/substitution failed:
  636 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:663:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<DimensionedField<Type2, GeoMesh> >&)’
  663 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:663:1: note:   template argument deduction/substitution failed:
  663 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:35,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.H:164,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:29,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldField.H:237,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:43,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.H:40,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFields.H:40,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/volFields.H:39,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/surfaceInterpolationScheme.C:30,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/surfaceInterpolationScheme.H:306,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/surfaceInterpolate.H:43,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvc.H:41,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvCFD.H:6:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:388:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const scalar&, const FieldField<Field, double>&)’
  388 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:388:36: note:   template argument deduction/substitution failed:
  388 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::FieldField<Field, double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:400:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const scalar&, const tmp<FieldField<Field, double> >&)’
  400 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:400:36: note:   template argument deduction/substitution failed:
  400 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:432:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const FieldField<Field, double>&, const scalar&)’
  432 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:432:36: note:   template argument deduction/substitution failed:
  432 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:444:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const tmp<FieldField<Field, double> >&, const scalar&)’
  444 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:444:36: note:   template argument deduction/substitution failed:
  444 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldField.C:503,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldField.H:240:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:691:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const FieldField<Field, Type1>&, const FieldField<Field2, Type2>&)’
  691 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:691:1: note:   template argument deduction/substitution failed:
  691 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:705:1: note: candidate: ‘template<template<class> class Field, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const FieldField<Field, Type>&, const tmp<FieldField<Field, Type1> >&)’
  705 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:705:1: note:   template argument deduction/substitution failed:
  705 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:361:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const FieldField<Field, Type1>&, const tmp<FieldField<Field2, Type2> >&)’
  361 | operator op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:485:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  485 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:361:1: note:   template argument deduction/substitution failed:
  361 | operator op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:485:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  485 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:747:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<FieldField<Field, Type1> >&, const FieldField<Field2, Type2>&)’
  747 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:747:1: note:   template argument deduction/substitution failed:
  747 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type1> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:768:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<FieldField<Field, Type1> >&, const tmp<FieldField<Field2, Type2> >&)’
  768 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:768:1: note:   template argument deduction/substitution failed:
  768 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type1> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:818:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const FieldField<Field, Type>&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:818:1: note:   template argument deduction/substitution failed:
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:839:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<FieldField<Field, Type> >&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  839 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:839:1: note:   template argument deduction/substitution failed:
  839 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:884:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const VectorSpace<Form, Cmpt, nCmpt>&, const FieldField<Field, Type>&)’
  884 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:884:1: note:   template argument deduction/substitution failed:
  884 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:905:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const VectorSpace<Form, Cmpt, nCmpt>&, const tmp<FieldField<Field, Type> >&)’
  905 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:905:1: note:   template argument deduction/substitution failed:
  905 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:726:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Foam::Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const FieldField<Field, Type1>&, const tmp<FieldField<Field2, Type2> >&)’
  726 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:726:1: note:   template argument deduction/substitution failed:
  726 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensor.H:152,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensor.H:44,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:41,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/coupledPolyPatch.H:44,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/mapDistribute.H:142,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:31,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/globalMeshData.H:748,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:30,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricBoundaryField.H:286:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:196:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const DiagTensor<Cmpt>&, const Tensor<Cmpt>&)’
  196 | operator+(const DiagTensor<Cmpt>& dt1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:196:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DiagTensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:210:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Tensor<Cmpt>&, const DiagTensor<Cmpt>&)’
  210 | operator+(const Tensor<Cmpt>& t1, const DiagTensor<Cmpt>& dt2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:210:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricField.C:1514,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricField.H:1081:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:650:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const GeometricField<TypeR, PatchField, GeoMesh>&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  650 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:650:1: note:   template argument deduction/substitution failed:
  650 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<TypeR, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:678:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const GeometricField<TypeR, PatchField, GeoMesh>&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  678 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:678:1: note:   template argument deduction/substitution failed:
  678 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<TypeR, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:708:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<TypeR, PatchField, GeoMesh> >&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  708 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:708:1: note:   template argument deduction/substitution failed:
  708 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:738:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<TypeR, PatchField, GeoMesh> >&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  738 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:738:1: note:   template argument deduction/substitution failed:
  738 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:788:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator+(const GeometricField<Type1, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  788 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:788:1: note:   template argument deduction/substitution failed:
  788 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<Type1, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:818:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const GeometricField<Type2, PatchField, GeoMesh>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:818:1: note:   template argument deduction/substitution failed:
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<Type2, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:831:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<Type1, PatchField, GeoMesh> >&, const dimensioned<Type>&)’
  831 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:831:1: note:   template argument deduction/substitution failed:
  831 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:864:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<Type2, PatchField, GeoMesh> >&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  864 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:864:1: note:   template argument deduction/substitution failed:
  864 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type2, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:896:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const dimensioned<Type>&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  896 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:896:1: note:   template argument deduction/substitution failed:
  896 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:926:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const GeometricField<Type2, PatchField, GeoMesh>&)’
  926 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:926:1: note:   template argument deduction/substitution failed:
  926 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:938:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const dimensioned<Type>&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  938 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:938:1: note:   template argument deduction/substitution failed:
  938 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:971:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<GeometricField<Type2, PatchField, GeoMesh> >&)’
  971 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:971:1: note:   template argument deduction/substitution failed:
  971 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:32,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.H:175:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:617:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const dimensioned<double>&, const GeometricField<double, PatchField, GeoMesh>&)’
  617 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:617:54: note:   template argument deduction/substitution failed:
  617 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:637:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const scalar&, const GeometricField<double, PatchField, GeoMesh>&)’
  637 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:637:54: note:   template argument deduction/substitution failed:
  637 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:648:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const dimensioned<double>&, const tmp<GeometricField<double, PatchField, GeoMesh> >&)’
  648 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:648:54: note:   template argument deduction/substitution failed:
  648 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:671:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const scalar&, const tmp<GeometricField<double, PatchField, GeoMesh> >&)’
  671 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:671:54: note:   template argument deduction/substitution failed:
  671 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:703:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const GeometricField<double, PatchField, GeoMesh>&, const dimensioned<double>&)’
  703 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:703:54: note:   template argument deduction/substitution failed:
  703 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:723:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const GeometricField<double, PatchField, GeoMesh>&, const scalar&)’
  723 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:723:54: note:   template argument deduction/substitution failed:
  723 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:734:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<double, PatchField, GeoMesh> >&, const dimensioned<double>&)’
  734 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:734:54: note:   template argument deduction/substitution failed:
  734 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<double, PatchField, GeoMesh> >&, const scalar&)’
  757 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:54: note:   template argument deduction/substitution failed:
  757 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroField.H:102,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldField.H:43,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/geometricZeroField.H:43,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvcDdt.H:45,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvc.H:46:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:39:20: note: candidate: ‘template<class Type> const Type& Foam::operator+(const Type&, const zeroField&)’
   39 | inline const Type& operator+(const Type& t, const zeroField&)
      |                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:39:20: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   cannot convert ‘Foam::operator*(const dimensioned<double>&, const dimensioned<Type>&) [with Type = double](Foam::operator-(const dimensioned<Type>&, const dimensioned<Type>&) [with Type = double]((* & psiMin)))’ (type ‘Foam::dimensioned<double>’) to type ‘const Foam::zeroField&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:45:20: note: candidate: ‘template<class Type> const Type& Foam::operator+(const zeroField&, const Type&)’
   45 | inline const Type& operator+(const zeroField&, const Type& t)
      |                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:45:20: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:19: note:   cannot convert ‘psiMaxn’ (type ‘Foam::scalarField’ {aka ‘Foam::Field<double>’}) to type ‘const Foam::zeroField&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ^~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.H:1299,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/ddtScheme.C:32,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/ddtScheme.H:391,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvcDdt.C:30,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvcDdt.H:252:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2222:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const fvMatrix<Type>&)’
 2222 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2222:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2235:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const fvMatrix<Type>&)’
 2235 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2235:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2248:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const tmp<fvMatrix<Type> >&)’
 2248 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2248:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2261:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const tmp<fvMatrix<Type> >&)’
 2261 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2261:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2275:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const DimensionedField<Type, volMesh>&)’
 2275 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2275:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2288:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const tmp<DimensionedField<Type, volMesh> >&)’
 2288 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2288:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2302:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const tmp<GeometricField<Type, fvPatchField, volMesh> >&)’
 2302 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2302:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2316:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const DimensionedField<Type, volMesh>&)’
 2316 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2316:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2329:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const tmp<DimensionedField<Type, volMesh> >&)’
 2329 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2329:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2343:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const tmp<GeometricField<Type, fvPatchField, volMesh> >&)’
 2343 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2343:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2357:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const DimensionedField<Type, volMesh>&, const fvMatrix<Type>&)’
 2357 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2357:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type, Foam::volMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2370:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<DimensionedField<Type, volMesh> >&, const fvMatrix<Type>&)’
 2370 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2370:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2384:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<GeometricField<Type, fvPatchField, volMesh> >&, const fvMatrix<Type>&)’
 2384 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2384:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2398:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const DimensionedField<Type, volMesh>&, const tmp<fvMatrix<Type> >&)’
 2398 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2398:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type, Foam::volMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2411:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<DimensionedField<Type, volMesh> >&, const tmp<fvMatrix<Type> >&)’
 2411 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2411:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2425:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<GeometricField<Type, fvPatchField, volMesh> >&, const tmp<fvMatrix<Type> >&)’
 2425 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2425:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2664:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const dimensioned<Type>&)’
 2664 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2664:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2677:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const dimensioned<Type>&)’
 2677 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2677:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2690:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const dimensioned<Type>&, const fvMatrix<Type>&)’
 2690 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2690:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2703:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const dimensioned<Type>&, const tmp<fvMatrix<Type> >&)’
 2703 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2703:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:39:23: note: candidate: ‘constexpr Foam::zero Foam::operator+(const zero&, const zero&)’
   39 | inline constexpr zero operator+(const zero&, const zero&) noexcept
      |                       ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:39:33: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::zero&’
   39 | inline constexpr zero operator+(const zero&, const zero&) noexcept
      |                                 ^~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/one.H:110,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UList.H:52:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:46:15: note: candidate: ‘Foam::scalar Foam::operator+(const scalar&, const one&)’
   46 | inline scalar operator+(const scalar& t, const one&) noexcept
      |               ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:46:39: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
   46 | inline scalar operator+(const scalar& t, const one&) noexcept
      |                         ~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:51:15: note: candidate: ‘Foam::scalar Foam::operator+(const one&, const scalar&)’
   51 | inline scalar operator+(const one&, const scalar& t) noexcept
      |               ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:51:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::one&’
   51 | inline scalar operator+(const one&, const scalar& t) noexcept
      |                         ^~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Enum.C:29,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Enum.H:398,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/IOobject.H:104,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/regIOobject.H:46,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/objectRegistry.H:45,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Time.H:45:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dictionary.H:1553:12: note: candidate: ‘Foam::dictionary Foam::operator+(const dictionary&, const dictionary&)’
 1553 | dictionary operator+(const dictionary& dict1, const dictionary& dict2);
      |            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dictionary.H:1553:40: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::dictionary&’
 1553 | dictionary operator+(const dictionary& dict1, const dictionary& dict2);
      |                      ~~~~~~~~~~~~~~~~~~^~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complex.H:376,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/tensor.H:52,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/symmTensor.H:50:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:284:16: note: candidate: ‘Foam::complex Foam::operator+(const complex&, const complex&)’
  284 | inline complex operator+(const complex& c1, const complex& c2)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:284:41: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::complex&’
  284 | inline complex operator+(const complex& c1, const complex& c2)
      |                          ~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:294:16: note: candidate: ‘Foam::complex Foam::operator+(const complex&, scalar)’
  294 | inline complex operator+(const complex& c, const scalar s)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:294:41: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::complex&’
  294 | inline complex operator+(const complex& c, const scalar s)
      |                          ~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:300:16: note: candidate: ‘Foam::complex Foam::operator+(scalar, const complex&)’
  300 | inline complex operator+(const scalar s, const complex& c)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:300:39: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘Foam::scalar’ {aka ‘double’}
  300 | inline complex operator+(const scalar s, const complex& c)
      |                          ~~~~~~~~~~~~~^
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:45:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator+(const scalar&, const UList<double>&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator+(const scalar&, const tmp<Field<double> >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator+(const UList<double>&, const scalar&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:257:18: note:   no known conversion for argument 2 from ‘Foam::dimensioned<double>’ to ‘const Foam::scalar&’ {aka ‘const double&’}
  257 |     const Type2& s2                                                            \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator+(const tmp<Field<double> >&, const scalar&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:264:18: note:   no known conversion for argument 2 from ‘Foam::dimensioned<double>’ to ‘const Foam::scalar&’ {aka ‘const double&’}
  264 |     const Type2& s2                                                            \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:420:14: note: candidate: ‘Foam::dimensionSet Foam::operator+(const dimensionSet&, const dimensionSet&)’
  420 | dimensionSet operator+(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:420:44: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::dimensionSet&’
  420 | dimensionSet operator+(const dimensionSet& ds1, const dimensionSet& ds2);
      |                        ~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:52:19: note: candidate: ‘Foam::dimensionedScalar Foam::operator+(const dimensionedScalar&, scalar)’
   52 | dimensionedScalar operator+(const dimensionedScalar&, const scalar);
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:52:29: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::dimensionedScalar&’ {aka ‘const Foam::dimensioned<double>&’}
   52 | dimensionedScalar operator+(const dimensionedScalar&, const scalar);
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:53:19: note: candidate: ‘Foam::dimensionedScalar Foam::operator+(scalar, const dimensionedScalar&)’
   53 | dimensionedScalar operator+(const scalar, const dimensionedScalar&);
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:53:29: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘Foam::scalar’ {aka ‘double’}
   53 | dimensionedScalar operator+(const scalar, const dimensionedScalar&);
      |                             ^~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:45,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/primitiveFields.H:41,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/pointField.H:38,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/edge.H:53,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/edgeList.H:31,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/primitiveMesh.H:57,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/polyMesh.H:48,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMesh.H:53:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator+(const label&, const UList<int>&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::label&’ {aka ‘const int&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator+(const label&, const tmp<Field<int> >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::label&’ {aka ‘const int&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator+(const UList<int>&, const label&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:256:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<int>&’
  256 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator+(const tmp<Field<int> >&, const label&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:263:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<int> >&’
  263 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedField.H:47:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:219:14: note: candidate: ‘Foam::orientedType Foam::operator+(const orientedType&, const orientedType&)’
  219 | orientedType operator+(const orientedType& ot1, const orientedType& ot2);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:219:44: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::orientedType&’
  219 | orientedType operator+(const orientedType& ot1, const orientedType& ot2);
      |                        ~~~~~~~~~~~~~~~~~~~~^~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransform.H:262,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/mapDistribute.H:141:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:254:36: note: candidate: ‘Foam::vectorTensorTransform Foam::operator+(const vectorTensorTransform&, const vector&)’
  254 | inline Foam::vectorTensorTransform Foam::operator+
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:256:34: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::vectorTensorTransform&’
  256 |     const vectorTensorTransform& tr,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:264:36: note: candidate: ‘Foam::vectorTensorTransform Foam::operator+(const vector&, const vectorTensorTransform&)’
  264 | inline Foam::vectorTensorTransform Foam::operator+
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:266:19: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::vector&’ {aka ‘const Foam::Vector<double>&’}
  266 |     const vector& t,
      |     ~~~~~~~~~~~~~~^
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:44:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:188:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const UList<DiagTensor<double> >&, const UList<Tensor<double> >&)’
  188 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:190:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  190 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:195:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const UList<DiagTensor<double> >&, const tmp<Field<Tensor<double> > >&)’
  195 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:197:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  197 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:202:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const tmp<Field<DiagTensor<double> > >&, const UList<Tensor<double> >&)’
  202 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:204:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  204 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:209:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const tmp<Field<DiagTensor<double> > >&, const tmp<Field<Tensor<double> > >&)’
  209 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:211:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  211 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const diagTensor&, const UList<Tensor<double> >&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::diagTensor&’ {aka ‘const Foam::DiagTensor<double>&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const diagTensor&, const tmp<Field<Tensor<double> > >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::diagTensor&’ {aka ‘const Foam::DiagTensor<double>&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const UList<DiagTensor<double> >&, const tensor&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:256:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  256 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const tmp<Field<DiagTensor<double> > >&, const tensor&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:263:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  263 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternion.H:352,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/transformField.H:42,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/mapDistributeTemplates.C:32,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/mapDistribute.H:772:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:710:25: note: candidate: ‘Foam::quaternion Foam::operator+(const quaternion&, const quaternion&)’
  710 | inline Foam::quaternion Foam::operator+
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:712:23: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::quaternion&’
  712 |     const quaternion& q1,
      |     ~~~~~~~~~~~~~~~~~~^~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernion.H:223,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/transformField.H:43:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:188:25: note: candidate: ‘Foam::septernion Foam::operator+(const septernion&, const vector&)’
  188 | inline Foam::septernion Foam::operator+
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:190:23: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::septernion&’
  190 |     const septernion& tr,
      |     ~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:198:25: note: candidate: ‘Foam::septernion Foam::operator+(const vector&, const septernion&)’
  198 | inline Foam::septernion Foam::operator+
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:200:19: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::vector&’ {aka ‘const Foam::Vector<double>&’}
  200 |     const vector& t,
      |     ~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:33:24: note: candidate: ‘const Foam::zeroField Foam::operator+(const zeroField&, const zeroField&)’
   33 | inline const zeroField operator+(const zeroField&, const zeroField&)
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:33:34: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::zeroField&’
   33 | inline const zeroField operator+(const zeroField&, const zeroField&)
      |                                  ^~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/clockTime.H:52,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/profiling.H:63,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/meshTools/lnInclude/AMIInterpolationTemplates.C:29,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/meshTools/lnInclude/AMIInterpolation.H:704,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/meshTools/lnInclude/cyclicAMIPolyPatch.H:53,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/cyclicAMIFvPatch.H:41,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/lduPrimitiveMeshAssemblyTemplates.C:31,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/lduPrimitiveMeshAssembly.H:236,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.H:53:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/clockValue.H:139:19: note: candidate: ‘Foam::clockValue Foam::operator+(const clockValue&, const clockValue&)’
  139 | inline clockValue operator+(const clockValue& a, const clockValue& b)
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/clockValue.H:139:47: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::clockValue&’
  139 | inline clockValue operator+(const clockValue& a, const clockValue& b)
      |                             ~~~~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: error: no match for ‘operator-’ (operand types are ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} and ‘Foam::dimensioned<double>’)
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:62:30: note: candidate: ‘template<class Type> constexpr const Type& Foam::operator-(const Type&, const zero&)’
   62 | inline constexpr const Type& operator-(const Type& val, const zero&) noexcept
      |                              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:62:30: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   cannot convert ‘Foam::operator*(const dimensioned<double>&, const dimensioned<Type>&) [with Type = double](Foam::operator-(const dimensioned<Type>&, const dimensioned<Type>&) [with Type = double]((* & psiMin)))’ (type ‘Foam::dimensioned<double>’) to type ‘const Foam::zero&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:68:23: note: candidate: ‘template<class Type> constexpr Type Foam::operator-(const zero&, const Type&)’
   68 | inline constexpr Type operator-(const zero&, const Type& val)
      |                       ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:68:23: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:19: note:   cannot convert ‘psiMinn’ (type ‘Foam::scalarField’ {aka ‘Foam::Field<double>’}) to type ‘const Foam::zero&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ^~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.H:494,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/objectRegistry.H:43:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.C:436:26: note: candidate: ‘template<class Key, class Hash> Foam::HashSet<Key, Hash> Foam::operator-(const HashSet<Key, Hash>&, const HashSet<Key, Hash>&)’
  436 | Foam::HashSet<Key, Hash> Foam::operator-
      |                          ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.C:436:26: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::HashSet<Key, Hash>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:718:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&)’
  718 | inline Form operator-
      |             ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:718:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:742:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  742 | inline Form operator-
      |             ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:742:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:33:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:85:24: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator-(const UList<T>&)’
   85 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:752:1: note: in expansion of macro ‘UNARY_OPERATOR’
  752 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:85:24: note:   template argument deduction/substitution failed:
   85 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:752:1: note: in expansion of macro ‘UNARY_OPERATOR’
  752 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   candidate expects 1 argument, 2 provided
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:96:24: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator-(const tmp<Field<Type> >&)’
   96 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:752:1: note: in expansion of macro ‘UNARY_OPERATOR’
  752 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:96:24: note:   template argument deduction/substitution failed:
   96 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:752:1: note: in expansion of macro ‘UNARY_OPERATOR’
  752 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:782:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const UList<T>&, const UList<Key>&)’
  782 | operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:782:1: note:   template argument deduction/substitution failed:
  782 | operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<Key>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:792:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const UList<T>&, const tmp<Field<Type2> >&)’
  792 | operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:792:1: note:   template argument deduction/substitution failed:
  792 | operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type2> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:803:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<Field<Type> >&, const UList<Key>&)’
  803 | operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:803:1: note:   template argument deduction/substitution failed:
  803 | operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:814:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<Field<Type> >&, const tmp<Field<Type2> >&)’
  814 | operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:814:1: note:   template argument deduction/substitution failed:
  814 | operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:839:1: note: candidate: ‘template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const UList<T>&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  839 | operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:839:1: note:   template argument deduction/substitution failed:
  839 | operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:849:1: note: candidate: ‘template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<Field<Type> >&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  849 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:849:1: note:   template argument deduction/substitution failed:
  849 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:877:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const UList<Type>&)’
  877 | operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:877:1: note:   template argument deduction/substitution failed:
  877 | operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:887:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<Field<Type> >&)’
  887 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:887:1: note:   template argument deduction/substitution failed:
  887 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:995:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const SphericalTensor<Cmpt>&, const Tensor<Cmpt>&)’
  995 | operator-(const SphericalTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:995:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SphericalTensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1009:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Tensor<Cmpt>&, const SphericalTensor<Cmpt>&)’
 1009 | operator-(const Tensor<Cmpt>& t1, const SphericalTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1009:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1023:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const SymmTensor<Cmpt>&, const Tensor<Cmpt>&)’
 1023 | operator-(const SymmTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1023:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SymmTensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1037:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Tensor<Cmpt>&, const SymmTensor<Cmpt>&)’
 1037 | operator-(const Tensor<Cmpt>& t1, const SymmTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1037:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:679:1: note: candidate: ‘template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator-(const SphericalTensor<Cmpt>&, const SymmTensor<Cmpt>&)’
  679 | operator-(const SphericalTensor<Cmpt>& spt1, const SymmTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:679:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SphericalTensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:693:1: note: candidate: ‘template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator-(const SymmTensor<Cmpt>&, const SphericalTensor<Cmpt>&)’
  693 | operator-(const SymmTensor<Cmpt>& st1, const SphericalTensor<Cmpt>& spt2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:693:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SymmTensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:760:6: note: candidate: ‘template<class Form, class Type> Form Foam::operator-(const Matrix<Form, Type>&)’
  760 | Form operator-(const Matrix<Form, Type>& mat)
      |      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:760:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Matrix<Form, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:812:7: note: candidate: ‘template<class Form1, class Form2, class Type> Form1 Foam::operator-(const Matrix<Form1, Type>&, const Matrix<Form2, Type>&)’
  812 | Form1 operator-
      |       ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:812:7: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Matrix<Form1, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:898:6: note: candidate: ‘template<class Form, class Type> Form Foam::operator-(const Type&, const Matrix<Form, Type>&)’
  898 | Form operator-(const Type& s, const Matrix<Form, Type>& mat)
      |      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:898:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::Matrix<Form, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:916:6: note: candidate: ‘template<class Form, class Type> Form Foam::operator-(const Matrix<Form, Type>&, const Type&)’
  916 | Form operator-(const Matrix<Form, Type>& mat, const Type& s)
      |      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:916:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Matrix<Form, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:836:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::operator-(const dimensioned<Type>&)’
  836 | Foam::dimensioned<Type> Foam::operator-(const dimensioned<Type>& dt)
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:836:25: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:848:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::operator-(const dimensioned<Type>&, const dimensioned<Type>&)’
  848 | Foam::dimensioned<Type> Foam::operator-
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:848:25: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:549:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const dimensioned<double>&, const DimensionedField<double, GeoMesh>&)’
  549 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:549:44: note:   template argument deduction/substitution failed:
  549 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:569:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const scalar&, const DimensionedField<double, GeoMesh>&)’
  569 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:569:44: note:   template argument deduction/substitution failed:
  569 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:580:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const dimensioned<double>&, const tmp<DimensionedField<double, GeoMesh> >&)’
  580 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:580:44: note:   template argument deduction/substitution failed:
  580 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:603:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const scalar&, const tmp<DimensionedField<double, GeoMesh> >&)’
  603 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:603:44: note:   template argument deduction/substitution failed:
  603 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:629:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const DimensionedField<double, GeoMesh>&, const dimensioned<double>&)’
  629 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:629:44: note:   template argument deduction/substitution failed:
  629 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const DimensionedField<double, GeoMesh>&, const scalar&)’
  649 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note:   template argument deduction/substitution failed:
  649 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:660:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const tmp<DimensionedField<double, GeoMesh> >&, const dimensioned<double>&)’
  660 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:660:44: note:   template argument deduction/substitution failed:
  660 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:683:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const tmp<DimensionedField<double, GeoMesh> >&, const scalar&)’
  683 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:683:44: note:   template argument deduction/substitution failed:
  683 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:32:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:105:44: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator-(const DimensionedField<Type, GeoMesh>&)’
  105 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:398:1: note: in expansion of macro ‘UNARY_OPERATOR’
  398 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:105:44: note:   template argument deduction/substitution failed:
  105 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:398:1: note: in expansion of macro ‘UNARY_OPERATOR’
  398 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:124:44: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator-(const tmp<DimensionedField<Type, GeoMesh> >&)’
  124 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:398:1: note: in expansion of macro ‘UNARY_OPERATOR’
  398 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:124:44: note:   template argument deduction/substitution failed:
  124 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:398:1: note: in expansion of macro ‘UNARY_OPERATOR’
  398 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:416:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const DimensionedField<TypeR, GeoMesh>&, const DimensionedField<Type1, GeoMesh>&)’
  416 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:416:1: note:   template argument deduction/substitution failed:
  416 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<TypeR, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:440:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const DimensionedField<TypeR, GeoMesh>&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  440 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:440:1: note:   template argument deduction/substitution failed:
  440 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<TypeR, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:467:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const tmp<DimensionedField<TypeR, GeoMesh> >&, const DimensionedField<Type1, GeoMesh>&)’
  467 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:467:1: note:   template argument deduction/substitution failed:
  467 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:494:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const tmp<DimensionedField<TypeR, GeoMesh> >&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  494 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:494:1: note:   template argument deduction/substitution failed:
  494 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:525:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator-(const DimensionedField<Type1, GeoMesh>&, const dimensioned<Type>&)’
  525 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:525:1: note:   template argument deduction/substitution failed:
  525 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type1, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:549:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const DimensionedField<Type2, GeoMesh>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  549 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:549:1: note:   template argument deduction/substitution failed:
  549 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type2, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:561:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator-(const tmp<DimensionedField<Type1, GeoMesh> >&, const dimensioned<Type>&)’
  561 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:561:1: note:   template argument deduction/substitution failed:
  561 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:588:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const tmp<DimensionedField<Type2, GeoMesh> >&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  588 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:588:1: note:   template argument deduction/substitution failed:
  588 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type2, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:600:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const dimensioned<Type>&, const DimensionedField<Type1, GeoMesh>&)’
  600 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:600:1: note:   template argument deduction/substitution failed:
  600 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:624:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const DimensionedField<Type2, GeoMesh>&)’
  624 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:624:1: note:   template argument deduction/substitution failed:
  624 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:636:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const dimensioned<Type>&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  636 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:636:1: note:   template argument deduction/substitution failed:
  636 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:663:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<DimensionedField<Type2, GeoMesh> >&)’
  663 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:663:1: note:   template argument deduction/substitution failed:
  663 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:388:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const scalar&, const FieldField<Field, double>&)’
  388 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:388:36: note:   template argument deduction/substitution failed:
  388 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::FieldField<Field, double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:400:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const scalar&, const tmp<FieldField<Field, double> >&)’
  400 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:400:36: note:   template argument deduction/substitution failed:
  400 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:432:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const FieldField<Field, double>&, const scalar&)’
  432 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:432:36: note:   template argument deduction/substitution failed:
  432 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:444:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const tmp<FieldField<Field, double> >&, const scalar&)’
  444 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:444:36: note:   template argument deduction/substitution failed:
  444 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:33:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:95:36: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator-(const FieldField<Field, Type>&)’
   95 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:645:1: note: in expansion of macro ‘UNARY_OPERATOR’
  645 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:95:36: note:   template argument deduction/substitution failed:
   95 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:645:1: note: in expansion of macro ‘UNARY_OPERATOR’
  645 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:106:36: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator-(const tmp<FieldField<Field, Type> >&)’
  106 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:645:1: note: in expansion of macro ‘UNARY_OPERATOR’
  645 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:106:36: note:   template argument deduction/substitution failed:
  106 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:645:1: note: in expansion of macro ‘UNARY_OPERATOR’
  645 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:691:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const FieldField<Field, Type1>&, const FieldField<Field2, Type2>&)’
  691 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:691:1: note:   template argument deduction/substitution failed:
  691 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:705:1: note: candidate: ‘template<template<class> class Field, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const FieldField<Field, Type>&, const tmp<FieldField<Field, Type1> >&)’
  705 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:705:1: note:   template argument deduction/substitution failed:
  705 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:361:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const FieldField<Field, Type1>&, const tmp<FieldField<Field2, Type2> >&)’
  361 | operator op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:486:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  486 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:361:1: note:   template argument deduction/substitution failed:
  361 | operator op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:486:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  486 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:747:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<FieldField<Field, Type1> >&, const FieldField<Field2, Type2>&)’
  747 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:747:1: note:   template argument deduction/substitution failed:
  747 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type1> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:768:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<FieldField<Field, Type1> >&, const tmp<FieldField<Field2, Type2> >&)’
  768 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:768:1: note:   template argument deduction/substitution failed:
  768 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type1> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:818:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const FieldField<Field, Type>&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:818:1: note:   template argument deduction/substitution failed:
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:839:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<FieldField<Field, Type> >&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  839 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:839:1: note:   template argument deduction/substitution failed:
  839 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:884:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const VectorSpace<Form, Cmpt, nCmpt>&, const FieldField<Field, Type>&)’
  884 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:884:1: note:   template argument deduction/substitution failed:
  884 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:905:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const VectorSpace<Form, Cmpt, nCmpt>&, const tmp<FieldField<Field, Type> >&)’
  905 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:905:1: note:   template argument deduction/substitution failed:
  905 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:726:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Foam::Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const FieldField<Field, Type1>&, const tmp<FieldField<Field2, Type2> >&)’
  726 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:726:1: note:   template argument deduction/substitution failed:
  726 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:224:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const DiagTensor<Cmpt>&, const Tensor<Cmpt>&)’
  224 | operator-(const DiagTensor<Cmpt>& dt1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:224:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DiagTensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:238:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Tensor<Cmpt>&, const DiagTensor<Cmpt>&)’
  238 | operator-(const Tensor<Cmpt>& t1, const DiagTensor<Cmpt>& dt2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:238:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:33:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:122:54: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator-(const GeometricField<Type, PatchField, GeoMesh>&)’
  122 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:596:1: note: in expansion of macro ‘UNARY_OPERATOR’
  596 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:122:54: note:   template argument deduction/substitution failed:
  122 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:596:1: note: in expansion of macro ‘UNARY_OPERATOR’
  596 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:141:54: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  141 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:596:1: note: in expansion of macro ‘UNARY_OPERATOR’
  596 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:141:54: note:   template argument deduction/substitution failed:
  141 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:596:1: note: in expansion of macro ‘UNARY_OPERATOR’
  596 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:650:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const GeometricField<TypeR, PatchField, GeoMesh>&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  650 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:650:1: note:   template argument deduction/substitution failed:
  650 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<TypeR, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:678:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const GeometricField<TypeR, PatchField, GeoMesh>&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  678 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:678:1: note:   template argument deduction/substitution failed:
  678 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<TypeR, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:708:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<TypeR, PatchField, GeoMesh> >&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  708 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:708:1: note:   template argument deduction/substitution failed:
  708 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:738:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<TypeR, PatchField, GeoMesh> >&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  738 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:738:1: note:   template argument deduction/substitution failed:
  738 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:788:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator-(const GeometricField<Type1, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  788 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:788:1: note:   template argument deduction/substitution failed:
  788 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<Type1, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:818:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const GeometricField<Type2, PatchField, GeoMesh>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:818:1: note:   template argument deduction/substitution failed:
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<Type2, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:831:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<Type1, PatchField, GeoMesh> >&, const dimensioned<Type>&)’
  831 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:831:1: note:   template argument deduction/substitution failed:
  831 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:864:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<Type2, PatchField, GeoMesh> >&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  864 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:864:1: note:   template argument deduction/substitution failed:
  864 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type2, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:896:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const dimensioned<Type>&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  896 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:896:1: note:   template argument deduction/substitution failed:
  896 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:926:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const GeometricField<Type2, PatchField, GeoMesh>&)’
  926 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:926:1: note:   template argument deduction/substitution failed:
  926 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:938:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const dimensioned<Type>&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  938 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:938:1: note:   template argument deduction/substitution failed:
  938 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:971:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<GeometricField<Type2, PatchField, GeoMesh> >&)’
  971 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:971:1: note:   template argument deduction/substitution failed:
  971 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:617:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const dimensioned<double>&, const GeometricField<double, PatchField, GeoMesh>&)’
  617 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:617:54: note:   template argument deduction/substitution failed:
  617 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:637:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const scalar&, const GeometricField<double, PatchField, GeoMesh>&)’
  637 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:637:54: note:   template argument deduction/substitution failed:
  637 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:648:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const dimensioned<double>&, const tmp<GeometricField<double, PatchField, GeoMesh> >&)’
  648 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:648:54: note:   template argument deduction/substitution failed:
  648 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:671:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const scalar&, const tmp<GeometricField<double, PatchField, GeoMesh> >&)’
  671 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:671:54: note:   template argument deduction/substitution failed:
  671 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:703:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const GeometricField<double, PatchField, GeoMesh>&, const dimensioned<double>&)’
  703 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:703:54: note:   template argument deduction/substitution failed:
  703 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:723:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const GeometricField<double, PatchField, GeoMesh>&, const scalar&)’
  723 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:723:54: note:   template argument deduction/substitution failed:
  723 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:734:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<double, PatchField, GeoMesh> >&, const dimensioned<double>&)’
  734 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:734:54: note:   template argument deduction/substitution failed:
  734 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<double, PatchField, GeoMesh> >&, const scalar&)’
  757 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:54: note:   template argument deduction/substitution failed:
  757 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:56:20: note: candidate: ‘template<class Type> const Type& Foam::operator-(const Type&, const zeroField&)’
   56 | inline const Type& operator-(const Type& t, const zeroField&)
      |                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:56:20: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   cannot convert ‘Foam::operator*(const dimensioned<double>&, const dimensioned<Type>&) [with Type = double](Foam::operator-(const dimensioned<Type>&, const dimensioned<Type>&) [with Type = double]((* & psiMin)))’ (type ‘Foam::dimensioned<double>’) to type ‘const Foam::zeroField&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:62:13: note: candidate: ‘template<class Type> Type Foam::operator-(const zeroField&, const Type&)’
   62 | inline Type operator-(const zeroField&, const Type& t)
      |             ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:62:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:19: note:   cannot convert ‘psiMinn’ (type ‘Foam::scalarField’ {aka ‘Foam::Field<double>’}) to type ‘const Foam::zeroField&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ^~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2199:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&)’
 2199 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2199:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2210:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&)’
 2210 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2210:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2440:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const fvMatrix<Type>&)’
 2440 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2440:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2453:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const fvMatrix<Type>&)’
 2453 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2453:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2466:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const tmp<fvMatrix<Type> >&)’
 2466 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2466:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2480:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const tmp<fvMatrix<Type> >&)’
 2480 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2480:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2494:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const DimensionedField<Type, volMesh>&)’
 2494 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2494:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2507:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const tmp<DimensionedField<Type, volMesh> >&)’
 2507 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2507:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2521:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const tmp<GeometricField<Type, fvPatchField, volMesh> >&)’
 2521 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2521:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2535:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const DimensionedField<Type, volMesh>&)’
 2535 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2535:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2548:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const tmp<DimensionedField<Type, volMesh> >&)’
 2548 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2548:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2562:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const tmp<GeometricField<Type, fvPatchField, volMesh> >&)’
 2562 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2562:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2576:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const DimensionedField<Type, volMesh>&, const fvMatrix<Type>&)’
 2576 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2576:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type, Foam::volMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2590:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<DimensionedField<Type, volMesh> >&, const fvMatrix<Type>&)’
 2590 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2590:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2605:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<GeometricField<Type, fvPatchField, volMesh> >&, const fvMatrix<Type>&)’
 2605 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2605:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2620:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const DimensionedField<Type, volMesh>&, const tmp<fvMatrix<Type> >&)’
 2620 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2620:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type, Foam::volMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2634:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<DimensionedField<Type, volMesh> >&, const tmp<fvMatrix<Type> >&)’
 2634 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2634:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2649:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<GeometricField<Type, fvPatchField, volMesh> >&, const tmp<fvMatrix<Type> >&)’
 2649 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2649:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2716:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const dimensioned<Type>&)’
 2716 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2716:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2729:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const dimensioned<Type>&)’
 2729 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2729:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2742:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const dimensioned<Type>&, const fvMatrix<Type>&)’
 2742 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2742:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2756:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const dimensioned<Type>&, const tmp<fvMatrix<Type> >&)’
 2756 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2756:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:56:23: note: candidate: ‘constexpr Foam::zero Foam::operator-(const zero&, const zero&)’
   56 | inline constexpr zero operator-(const zero&, const zero&) noexcept
      |                       ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:56:33: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::zero&’
   56 | inline constexpr zero operator-(const zero&, const zero&) noexcept
      |                                 ^~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:56:15: note: candidate: ‘Foam::scalar Foam::operator-(const scalar&, const one&)’
   56 | inline scalar operator-(const scalar& t, const one&) noexcept
      |               ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:56:39: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
   56 | inline scalar operator-(const scalar& t, const one&) noexcept
      |                         ~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:61:15: note: candidate: ‘Foam::scalar Foam::operator-(const one&, const scalar&)’
   61 | inline scalar operator-(const one&, const scalar& t) noexcept
      |               ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:61:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::one&’
   61 | inline scalar operator-(const one&, const scalar& t) noexcept
      |                         ^~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/bitSet.H:660,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/ListOps.H:54,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UPstream.H:49,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/fileOperation.H:78,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/IOobjectTemplates.C:31,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/IOobject.H:742:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/bitSetI.H:715:21: note: candidate: ‘Foam::bitSet Foam::operator-(const bitSet&, const bitSet&)’
  715 | inline Foam::bitSet Foam::operator-(const bitSet& a, const bitSet& b)
      |                     ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/bitSetI.H:715:51: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::bitSet&’
  715 | inline Foam::bitSet Foam::operator-(const bitSet& a, const bitSet& b)
      |                                     ~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:278:16: note: candidate: ‘Foam::complex Foam::operator-(const complex&)’
  278 | inline complex operator-(const complex& c)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:278:16: note:   candidate expects 1 argument, 2 provided
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:306:16: note: candidate: ‘Foam::complex Foam::operator-(const complex&, const complex&)’
  306 | inline complex operator-(const complex& c1, const complex& c2)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:306:41: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::complex&’
  306 | inline complex operator-(const complex& c1, const complex& c2)
      |                          ~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:316:16: note: candidate: ‘Foam::complex Foam::operator-(const complex&, scalar)’
  316 | inline complex operator-(const complex& c, const scalar s)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:316:41: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::complex&’
  316 | inline complex operator-(const complex& c, const scalar s)
      |                          ~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:322:16: note: candidate: ‘Foam::complex Foam::operator-(scalar, const complex&)’
  322 | inline complex operator-(const scalar s, const complex& c)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:322:39: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘Foam::scalar’ {aka ‘double’}
  322 | inline complex operator-(const scalar s, const complex& c)
      |                          ~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator-(const scalar&, const UList<double>&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator-(const scalar&, const tmp<Field<double> >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator-(const UList<double>&, const scalar&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:257:18: note:   no known conversion for argument 2 from ‘Foam::dimensioned<double>’ to ‘const Foam::scalar&’ {aka ‘const double&’}
  257 |     const Type2& s2                                                            \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator-(const tmp<Field<double> >&, const scalar&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:264:18: note:   no known conversion for argument 2 from ‘Foam::dimensioned<double>’ to ‘const Foam::scalar&’ {aka ‘const double&’}
  264 |     const Type2& s2                                                            \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:418:14: note: candidate: ‘Foam::dimensionSet Foam::operator-(const dimensionSet&)’
  418 | dimensionSet operator-(const dimensionSet& ds);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:418:14: note:   candidate expects 1 argument, 2 provided
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:421:14: note: candidate: ‘Foam::dimensionSet Foam::operator-(const dimensionSet&, const dimensionSet&)’
  421 | dimensionSet operator-(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:421:44: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::dimensionSet&’
  421 | dimensionSet operator-(const dimensionSet& ds1, const dimensionSet& ds2);
      |                        ~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:55:19: note: candidate: ‘Foam::dimensionedScalar Foam::operator-(const dimensionedScalar&, scalar)’
   55 | dimensionedScalar operator-(const dimensionedScalar&, const scalar);
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:55:29: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::dimensionedScalar&’ {aka ‘const Foam::dimensioned<double>&’}
   55 | dimensionedScalar operator-(const dimensionedScalar&, const scalar);
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:56:19: note: candidate: ‘Foam::dimensionedScalar Foam::operator-(scalar, const dimensionedScalar&)’
   56 | dimensionedScalar operator-(const scalar, const dimensionedScalar&);
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:56:29: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘Foam::scalar’ {aka ‘double’}
   56 | dimensionedScalar operator-(const scalar, const dimensionedScalar&);
      |                             ^~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator-(const label&, const UList<int>&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::label&’ {aka ‘const int&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator-(const label&, const tmp<Field<int> >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::label&’ {aka ‘const int&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator-(const UList<int>&, const label&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:256:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<int>&’
  256 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator-(const tmp<Field<int> >&, const label&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:263:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<int> >&’
  263 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:215:14: note: candidate: ‘Foam::orientedType Foam::operator-(const orientedType&)’
  215 | orientedType operator-(const orientedType& ot);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:215:14: note:   candidate expects 1 argument, 2 provided
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:220:14: note: candidate: ‘Foam::orientedType Foam::operator-(const orientedType&, const orientedType&)’
  220 | orientedType operator-(const orientedType& ot1, const orientedType& ot2);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:220:44: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::orientedType&’
  220 | orientedType operator-(const orientedType& ot1, const orientedType& ot2);
      |                        ~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:274:36: note: candidate: ‘Foam::vectorTensorTransform Foam::operator-(const vectorTensorTransform&, const vector&)’
  274 | inline Foam::vectorTensorTransform Foam::operator-
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:276:34: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::vectorTensorTransform&’
  276 |     const vectorTensorTransform& tr,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:188:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const UList<DiagTensor<double> >&, const UList<Tensor<double> >&)’
  188 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:190:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  190 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:195:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const UList<DiagTensor<double> >&, const tmp<Field<Tensor<double> > >&)’
  195 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:197:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  197 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:202:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const tmp<Field<DiagTensor<double> > >&, const UList<Tensor<double> >&)’
  202 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:204:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  204 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:209:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const tmp<Field<DiagTensor<double> > >&, const tmp<Field<Tensor<double> > >&)’
  209 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:211:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  211 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const diagTensor&, const UList<Tensor<double> >&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::diagTensor&’ {aka ‘const Foam::DiagTensor<double>&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const diagTensor&, const tmp<Field<Tensor<double> > >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::diagTensor&’ {aka ‘const Foam::DiagTensor<double>&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const UList<DiagTensor<double> >&, const tensor&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:256:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  256 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const tmp<Field<DiagTensor<double> > >&, const tensor&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:263:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  263 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:720:25: note: candidate: ‘Foam::quaternion Foam::operator-(const quaternion&)’
  720 | inline Foam::quaternion Foam::operator-(const quaternion& q)
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:720:25: note:   candidate expects 1 argument, 2 provided
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:726:25: note: candidate: ‘Foam::quaternion Foam::operator-(const quaternion&, const quaternion&)’
  726 | inline Foam::quaternion Foam::operator-
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:728:23: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::quaternion&’
  728 |     const quaternion& q1,
      |     ~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:208:25: note: candidate: ‘Foam::septernion Foam::operator-(const septernion&, const vector&)’
  208 | inline Foam::septernion Foam::operator-
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:210:23: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::septernion&’
  210 |     const septernion& tr,
      |     ~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:50:24: note: candidate: ‘const Foam::zeroField Foam::operator-(const zeroField&, const zeroField&)’
   50 | inline const zeroField operator-(const zeroField&, const zeroField&)
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:50:34: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::zeroField&’
   50 | inline const zeroField operator-(const zeroField&, const zeroField&)
      |                                  ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/clockValue.H:133:19: note: candidate: ‘Foam::clockValue Foam::operator-(const clockValue&, const clockValue&)’
  133 | inline clockValue operator-(const clockValue& a, const clockValue& b)
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/clockValue.H:133:47: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::clockValue&’
  133 | inline clockValue operator-(const clockValue& a, const clockValue& b)
      |                             ~~~~~~~~~~~~~~~~~~^
In file included from ttt.C:37:
VectorTensorOps.H:9:23: note: candidate: ‘Foam::Vector<double> Foam::operator-(const Vector<double>&, const Tensor<double>&)’
    9 | inline Vector<double> operator-(const Vector<double>& v, const Tensor<double>& t)
      |                       ^~~~~~~~
VectorTensorOps.H:9:55: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::Vector<double>&’
    9 | inline Vector<double> operator-(const Vector<double>& v, const Tensor<double>& t)
      |                                 ~~~~~~~~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: error: no matching function for call to ‘min(Foam::tmp<Foam::Field<double> >, const Foam::dimensioned<double>&)’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:105:13: note: candidate: ‘template<class Type> Type Foam::min(const zero&, const Type&)’
  105 | inline Type min(const zero&, const Type& t)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:105:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘Foam::operator+(const tmp<Field<Type> >&, const tmp<Field<Type2> >&) [with Type1 = double; Type2 = double; typename typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const UList<T>&) [with Type = double; scalar = double](psiMaxn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:111:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const zero&)’
  111 | inline Type min(const Type& t, const zero&)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:111:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘psiMax’ (type ‘const Foam::dimensioned<double>’) to type ‘const Foam::zero&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:112:13: note: candidate: ‘template<class Type> Type Foam::min(const one&, const Type&)’
  112 | inline Type min(const one&, const Type& t) noexcept
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:112:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘Foam::operator+(const tmp<Field<Type> >&, const tmp<Field<Type2> >&) [with Type1 = double; Type2 = double; typename typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const UList<T>&) [with Type = double; scalar = double](psiMaxn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:118:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const one&)’
  118 | inline Type min(const Type& t, const one&) noexcept
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:118:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘psiMax’ (type ‘const Foam::dimensioned<double>’) to type ‘const Foam::one&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:661:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::min(const VectorSpace<Form, Cmpt, Ncmpts>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  661 | inline Form min
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:661:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:388:6: note: candidate: ‘template<class Type> Type Foam::min(const UList<T>&)’
  388 | Type min(const UList<Type>& f1)
      |      ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:388:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:400:26: note: candidate: ‘template<class Type> Type Foam::min(const tmp<Field<Type> >&)’
  400 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:365:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  365 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:400:26: note:   template argument deduction/substitution failed:
  400 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:365:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  365 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   candidate expects 1 argument, 2 provided
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note: candidate: ‘template<class Type> void Foam::min(Field<Type>&, const UList<T>&, const UList<T>&)’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:113:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM’
  113 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note:   template argument deduction/substitution failed:
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:113:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM’
  113 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const UList<T>&, const UList<T>&)’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:129:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  129 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note:   template argument deduction/substitution failed:
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:129:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  129 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const UList<T>&, const tmp<Field<Type> >&)’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:141:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  141 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note:   template argument deduction/substitution failed:
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:141:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  141 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const tmp<Field<Type> >&, const UList<T>&)’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:154:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  154 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note:   template argument deduction/substitution failed:
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:154:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  154 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const tmp<Field<Type> >&, const tmp<Field<Type> >&)’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:167:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  167 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note:   template argument deduction/substitution failed:
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:167:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  167 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> void Foam::min(Field<Type>&, const Type&, const UList<T>&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_SF’
  190 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_SF’
  190 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const UList<T>&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  206 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  206 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const tmp<Field<Type> >&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:218:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  218 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:218:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  218 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> void Foam::min(Field<Type>&, const UList<T>&, const Type&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:238:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_FS’
  238 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:238:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_FS’
  238 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const UList<T>&, const Type&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:254:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  254 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:254:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  254 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const tmp<Field<Type> >&, const Type&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:266:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  266 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:266:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  266 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘Foam::dimensioned<double>’)
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:728:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::min(const Matrix<Form, Type>&)’
  728 | const Type& min(const Matrix<Form, Type>& mat)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:728:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:734:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::min(const dimensioned<Type>&, const dimensioned<Type>&)’
  734 | Foam::dimensioned<Type> Foam::min
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:734:25: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const DimensionedField<Type, GeoMesh>&)’
  301 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:276:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  276 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:32: note:   template argument deduction/substitution failed:
  301 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:276:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  276 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const tmp<DimensionedField<Type, GeoMesh> >&)’
  301 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:290:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  290 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:32: note:   template argument deduction/substitution failed:
  301 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:290:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  290 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note: candidate: ‘template<class Type, class GeoMesh> void Foam::min(DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&)’
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:150:6: note: in definition of macro ‘BINARY_FUNCTION’
  150 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note:   template argument deduction/substitution failed:
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:150:6: note: in definition of macro ‘BINARY_FUNCTION’
  150 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&)’
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:163:44: note: in definition of macro ‘BINARY_FUNCTION’
  163 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note:   template argument deduction/substitution failed:
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:163:44: note: in definition of macro ‘BINARY_FUNCTION’
  163 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const DimensionedField<Type, GeoMesh>&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:183:44: note: in definition of macro ‘BINARY_FUNCTION’
  183 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note:   template argument deduction/substitution failed:
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:183:44: note: in definition of macro ‘BINARY_FUNCTION’
  183 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const tmp<DimensionedField<Type, GeoMesh> >&, const DimensionedField<Type, GeoMesh>&)’
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:206:44: note: in definition of macro ‘BINARY_FUNCTION’
  206 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note:   template argument deduction/substitution failed:
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:206:44: note: in definition of macro ‘BINARY_FUNCTION’
  206 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const tmp<DimensionedField<Type, GeoMesh> >&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:229:44: note: in definition of macro ‘BINARY_FUNCTION’
  229 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note:   template argument deduction/substitution failed:
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:229:44: note: in definition of macro ‘BINARY_FUNCTION’
  229 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> void Foam::min(DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&, const DimensionedField<Type, GeoMesh>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:260:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  260 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:260:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  260 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const dimensioned<Type>&, const DimensionedField<Type, GeoMesh>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:273:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  273 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:273:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  273 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const DimensionedField<Type, GeoMesh>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:293:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  293 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:293:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  293 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const dimensioned<Type>&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:304:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  304 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:304:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  304 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:326:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:326:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> void Foam::min(DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:339:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  339 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:339:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  339 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:352:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  352 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:352:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  352 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const DimensionedField<Type, GeoMesh>&, const Type&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:372:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  372 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:372:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  372 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const tmp<DimensionedField<Type, GeoMesh> >&, const dimensioned<Type>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:383:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  383 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:383:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  383 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const tmp<DimensionedField<Type, GeoMesh> >&, const Type&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:406:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  406 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:406:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  406 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:449:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const FieldField<Field, Type>&)’
  449 | Type min(const FieldField<Field, Type>& f)
      |      ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:449:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const tmp<FieldField<Field, Type> >&)’
  466 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:419:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  419 | ReturnType Func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note:   template argument deduction/substitution failed:
  466 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:419:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  419 | ReturnType Func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(FieldField<Field, Type>&, const FieldField<Field, Type>&, const FieldField<Field, Type>&)’
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:123:6: note: in definition of macro ‘BINARY_FUNCTION’
  123 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note:   template argument deduction/substitution failed:
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:123:6: note: in definition of macro ‘BINARY_FUNCTION’
  123 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const FieldField<Field, Type>&, const FieldField<Field, Type>&)’
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:139:36: note: in definition of macro ‘BINARY_FUNCTION’
  139 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note:   template argument deduction/substitution failed:
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:139:36: note: in definition of macro ‘BINARY_FUNCTION’
  139 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const FieldField<Field, Type>&, const tmp<FieldField<Field, Type> >&)’
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:151:36: note: in definition of macro ‘BINARY_FUNCTION’
  151 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note:   template argument deduction/substitution failed:
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:151:36: note: in definition of macro ‘BINARY_FUNCTION’
  151 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const tmp<FieldField<Field, Type> >&, const FieldField<Field, Type>&)’
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:164:36: note: in definition of macro ‘BINARY_FUNCTION’
  164 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note:   template argument deduction/substitution failed:
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:164:36: note: in definition of macro ‘BINARY_FUNCTION’
  164 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const tmp<FieldField<Field, Type> >&, const tmp<FieldField<Field, Type> >&)’
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:177:36: note: in definition of macro ‘BINARY_FUNCTION’
  177 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note:   template argument deduction/substitution failed:
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:177:36: note: in definition of macro ‘BINARY_FUNCTION’
  177 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(FieldField<Field, Type>&, const Type&, const FieldField<Field, Type>&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:200:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  200 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:200:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  200 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const FieldField<Field, Type>&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:216:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  216 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:216:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  216 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const tmp<FieldField<Field, Type> >&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:228:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  228 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:228:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  228 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(FieldField<Field, Type>&, const FieldField<Field, Type>&, const Type&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:244:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  244 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:244:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  244 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const FieldField<Field, Type>&, const Type&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:260:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  260 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:260:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  260 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const tmp<FieldField<Field, Type> >&, const Type&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:272:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  272 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:272:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  272 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:463:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const GeometricField<Type, PatchField, GeoMesh>&)’
  463 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:430:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  430 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:463:46: note:   template argument deduction/substitution failed:
  463 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:430:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  430 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:463:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  463 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:452:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  452 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:463:46: note:   template argument deduction/substitution failed:
  463 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:452:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  452 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:167:6: note: in definition of macro ‘BINARY_FUNCTION’
  167 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note:   template argument deduction/substitution failed:
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:167:6: note: in definition of macro ‘BINARY_FUNCTION’
  167 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:196:54: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note:   template argument deduction/substitution failed:
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:196:54: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const GeometricField<Type, PatchField, GeoMesh>&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:216:54: note: in definition of macro ‘BINARY_FUNCTION’
  216 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note:   template argument deduction/substitution failed:
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:216:54: note: in definition of macro ‘BINARY_FUNCTION’
  216 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const GeometricField<Type, PatchField, GeoMesh>&)’
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:239:54: note: in definition of macro ‘BINARY_FUNCTION’
  239 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note:   template argument deduction/substitution failed:
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:239:54: note: in definition of macro ‘BINARY_FUNCTION’
  239 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:262:54: note: in definition of macro ‘BINARY_FUNCTION’
  262 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note:   template argument deduction/substitution failed:
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:262:54: note: in definition of macro ‘BINARY_FUNCTION’
  262 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:294:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:294:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const dimensioned<Type>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:313:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  313 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:313:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  313 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const GeometricField<Type, PatchField, GeoMesh>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:333:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  333 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:333:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  333 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const dimensioned<Type>&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:344:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  344 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:344:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  344 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:367:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  367 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:367:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  367 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:380:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  380 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:380:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  380 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:399:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  399 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:399:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  399 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:419:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  419 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:419:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  419 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const dimensioned<Type>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:430:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  430 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:430:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  430 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:453:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  453 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:453:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  453 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformField.H:79,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULES.H:55:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::min(const UniformField<Type>&, const UniformField<Type>&)’
   39 | inline UniformField<Type> min
      |                           ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const UniformField<Type>&, const OtherType&)’
   50 | inline OtherType min(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const OtherType&, const UniformField<Type>&)’
   57 | inline OtherType min(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UniformField<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/label.H:42,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:32,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/floatScalar.H:42,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalar.H:42,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Instant.H:39,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/instant.H:42,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/instantList.H:37:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int8_t Foam::min(int8_t, int8_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int16_t Foam::min(int16_t, int16_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int32_t Foam::min(int32_t, int32_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int64_t Foam::min(int64_t, int32_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int64_t Foam::min(int32_t, int64_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int64_t Foam::min(int64_t, int64_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(double, double)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:55:1: note: in expansion of macro ‘MAXMINPOW’
   55 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:55:1: note: in expansion of macro ‘MAXMINPOW’
   55 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(double, float)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:56:1: note: in expansion of macro ‘MAXMINPOW’
   56 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:56:1: note: in expansion of macro ‘MAXMINPOW’
   56 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(float, double)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:57:1: note: in expansion of macro ‘MAXMINPOW’
   57 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:57:1: note: in expansion of macro ‘MAXMINPOW’
   57 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(double, int)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:58:1: note: in expansion of macro ‘MAXMINPOW’
   58 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:58:1: note: in expansion of macro ‘MAXMINPOW’
   58 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(int, double)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:59:1: note: in expansion of macro ‘MAXMINPOW’
   59 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:59:1: note: in expansion of macro ‘MAXMINPOW’
   59 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(double, long int)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:60:1: note: in expansion of macro ‘MAXMINPOW’
   60 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:60:1: note: in expansion of macro ‘MAXMINPOW’
   60 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(long int, double)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:61:1: note: in expansion of macro ‘MAXMINPOW’
   61 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:61:1: note: in expansion of macro ‘MAXMINPOW’
   61 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘float Foam::min(float, float)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:62:1: note: in expansion of macro ‘MAXMINPOW’
   62 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:62:1: note: in expansion of macro ‘MAXMINPOW’
   62 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘float Foam::min(float, int)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘float Foam::min(int, float)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘float Foam::min(float, long int)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘float Foam::min(long int, float)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uLabel.H:42,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/IOstream.H:51,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Ostream.H:42,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/OSstream.H:42,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/messageStream.H:322,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/error.H:59,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/autoPtrI.H:29,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/autoPtr.H:348,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/List.H:46:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint8_t Foam::min(uint8_t, uint8_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint16_t Foam::min(uint16_t, uint16_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint32_t Foam::min(uint32_t, uint32_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint32_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint32_t, uint64_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint64_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:99:13: note: candidate: ‘Foam::zero Foam::min(const zero&, const zero&)’
   99 | inline zero min(const zero&, const zero&)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:99:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
   99 | inline zero min(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:106:29: note: candidate: ‘constexpr const Foam::one& Foam::min(const one&, const one&)’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:106:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.H:433:7: note: candidate: ‘Foam::label Foam::min(const labelHashSet&, label)’
  433 | label min(const labelHashSet& set, label minValue = labelMax);
      |       ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.H:433:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  433 | label min(const labelHashSet& set, label minValue = labelMax);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:226:23: note: candidate: ‘const Foam::complex& Foam::min(const complex&, const complex&)’
  226 | inline const complex& min(const complex& c1, const complex& c2)
      |                       ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:226:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  226 | inline const complex& min(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:357:14: note: candidate: ‘Foam::dimensionSet Foam::min(const dimensionSet&, const dimensionSet&)’
  357 | dimensionSet min(const dimensionSet& a, const dimensionSet& b);
      |              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:357:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  357 | dimensionSet min(const dimensionSet& a, const dimensionSet& b);
      |                  ~~~~~~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:175:14: note: candidate: ‘Foam::orientedType Foam::min(const orientedType&, const orientedType&)’
  175 | orientedType min(const orientedType& a, const orientedType& b);
      |              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:175:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  175 | orientedType min(const orientedType& a, const orientedType& b);
      |                  ~~~~~~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: error: no matching function for call to ‘max(Foam::tmp<Foam::Field<double> >, const Foam::dimensioned<double>&)’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:122:13: note: candidate: ‘template<class Type> Type Foam::max(const zero&, const Type&)’
  122 | inline Type max(const zero&, const Type& t)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:122:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘Foam::operator+(const tmp<Field<Type> >&, const tmp<Field<Type2> >&) [with Type1 = double; Type2 = double; typename typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const UList<T>&) [with Type = double; scalar = double](psiMinn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:128:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const zero&)’
  128 | inline Type max(const Type& t, const zero&)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:128:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘psiMin’ (type ‘const Foam::dimensioned<double>’) to type ‘const Foam::zero&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:129:13: note: candidate: ‘template<class Type> Type Foam::max(const one&, const Type&)’
  129 | inline Type max(const one&, const Type& t) noexcept
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:129:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘Foam::operator+(const tmp<Field<Type> >&, const tmp<Field<Type2> >&) [with Type1 = double; Type2 = double; typename typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const UList<T>&) [with Type = double; scalar = double](psiMinn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:135:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const one&)’
  135 | inline Type max(const Type& t, const one&) noexcept
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:135:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘psiMin’ (type ‘const Foam::dimensioned<double>’) to type ‘const Foam::one&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:648:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::max(const VectorSpace<Form, Cmpt, Ncmpts>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  648 | inline Form max
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:648:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:373:6: note: candidate: ‘template<class Type> Type Foam::max(const UList<T>&)’
  373 | Type max(const UList<Type>& f1)
      |      ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:373:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:385:26: note: candidate: ‘template<class Type> Type Foam::max(const tmp<Field<Type> >&)’
  385 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:365:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  365 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:385:26: note:   template argument deduction/substitution failed:
  385 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:365:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  365 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   candidate expects 1 argument, 2 provided
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: ‘template<class Type> void Foam::max(Field<Type>&, const UList<T>&, const UList<T>&)’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:113:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM’
  113 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:113:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM’
  113 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const UList<T>&, const UList<T>&)’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:129:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  129 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:129:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  129 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const UList<T>&, const tmp<Field<Type> >&)’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:141:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  141 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:141:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  141 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const tmp<Field<Type> >&, const UList<T>&)’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:154:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  154 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:154:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  154 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const tmp<Field<Type> >&, const tmp<Field<Type> >&)’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:167:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  167 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:167:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  167 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> void Foam::max(Field<Type>&, const Type&, const UList<T>&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_SF’
  190 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_SF’
  190 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const UList<T>&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  206 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  206 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const tmp<Field<Type> >&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:218:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  218 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:218:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  218 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> void Foam::max(Field<Type>&, const UList<T>&, const Type&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:238:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_FS’
  238 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:238:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_FS’
  238 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const UList<T>&, const Type&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:254:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  254 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:254:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  254 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const tmp<Field<Type> >&, const Type&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:266:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  266 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:266:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  266 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘Foam::dimensioned<double>’)
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:714:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::max(const Matrix<Form, Type>&)’
  714 | const Type& max(const Matrix<Form, Type>& mat)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:714:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:718:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::max(const dimensioned<Type>&, const dimensioned<Type>&)’
  718 | Foam::dimensioned<Type> Foam::max
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:718:25: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SolverPerformance.H:301,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/solverPerformance.H:40,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/meshState.H:47,
                 from /home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/polyMesh.H:62:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SolverPerformance.C:175:40: note: candidate: ‘template<class Type> Foam::SolverPerformance<Type> Foam::max(const SolverPerformance<Type>&, const SolverPerformance<Type>&)’
  175 | typename Foam::SolverPerformance<Type> Foam::max
      |                                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SolverPerformance.C:175:40: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::SolverPerformance<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const DimensionedField<Type, GeoMesh>&)’
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:276:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  276 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note:   template argument deduction/substitution failed:
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:276:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  276 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const tmp<DimensionedField<Type, GeoMesh> >&)’
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:290:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  290 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note:   template argument deduction/substitution failed:
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:290:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  290 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: ‘template<class Type, class GeoMesh> void Foam::max(DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&)’
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:150:6: note: in definition of macro ‘BINARY_FUNCTION’
  150 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:150:6: note: in definition of macro ‘BINARY_FUNCTION’
  150 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&)’
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:163:44: note: in definition of macro ‘BINARY_FUNCTION’
  163 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:163:44: note: in definition of macro ‘BINARY_FUNCTION’
  163 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const DimensionedField<Type, GeoMesh>&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:183:44: note: in definition of macro ‘BINARY_FUNCTION’
  183 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:183:44: note: in definition of macro ‘BINARY_FUNCTION’
  183 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const tmp<DimensionedField<Type, GeoMesh> >&, const DimensionedField<Type, GeoMesh>&)’
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:206:44: note: in definition of macro ‘BINARY_FUNCTION’
  206 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:206:44: note: in definition of macro ‘BINARY_FUNCTION’
  206 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const tmp<DimensionedField<Type, GeoMesh> >&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:229:44: note: in definition of macro ‘BINARY_FUNCTION’
  229 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:229:44: note: in definition of macro ‘BINARY_FUNCTION’
  229 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> void Foam::max(DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&, const DimensionedField<Type, GeoMesh>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:260:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  260 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:260:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  260 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const dimensioned<Type>&, const DimensionedField<Type, GeoMesh>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:273:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  273 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:273:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  273 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const DimensionedField<Type, GeoMesh>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:293:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  293 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:293:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  293 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const dimensioned<Type>&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:304:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  304 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:304:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  304 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:326:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:326:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> void Foam::max(DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:339:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  339 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:339:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  339 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:352:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  352 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:352:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  352 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const DimensionedField<Type, GeoMesh>&, const Type&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:372:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  372 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:372:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  372 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const tmp<DimensionedField<Type, GeoMesh> >&, const dimensioned<Type>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:383:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  383 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:383:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  383 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const tmp<DimensionedField<Type, GeoMesh> >&, const Type&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:406:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  406 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:406:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  406 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:427:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const FieldField<Field, Type>&)’
  427 | Type max(const FieldField<Field, Type>& f)
      |      ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:427:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:445:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const tmp<FieldField<Field, Type> >&)’
  445 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:419:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  419 | ReturnType Func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:445:26: note:   template argument deduction/substitution failed:
  445 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:419:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  419 | ReturnType Func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(FieldField<Field, Type>&, const FieldField<Field, Type>&, const FieldField<Field, Type>&)’
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:123:6: note: in definition of macro ‘BINARY_FUNCTION’
  123 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:123:6: note: in definition of macro ‘BINARY_FUNCTION’
  123 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const FieldField<Field, Type>&, const FieldField<Field, Type>&)’
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:139:36: note: in definition of macro ‘BINARY_FUNCTION’
  139 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:139:36: note: in definition of macro ‘BINARY_FUNCTION’
  139 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const FieldField<Field, Type>&, const tmp<FieldField<Field, Type> >&)’
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:151:36: note: in definition of macro ‘BINARY_FUNCTION’
  151 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:151:36: note: in definition of macro ‘BINARY_FUNCTION’
  151 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const tmp<FieldField<Field, Type> >&, const FieldField<Field, Type>&)’
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:164:36: note: in definition of macro ‘BINARY_FUNCTION’
  164 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:164:36: note: in definition of macro ‘BINARY_FUNCTION’
  164 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const tmp<FieldField<Field, Type> >&, const tmp<FieldField<Field, Type> >&)’
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:177:36: note: in definition of macro ‘BINARY_FUNCTION’
  177 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:177:36: note: in definition of macro ‘BINARY_FUNCTION’
  177 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(FieldField<Field, Type>&, const Type&, const FieldField<Field, Type>&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:200:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  200 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:200:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  200 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const FieldField<Field, Type>&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:216:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  216 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:216:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  216 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const tmp<FieldField<Field, Type> >&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:228:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  228 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:228:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  228 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(FieldField<Field, Type>&, const FieldField<Field, Type>&, const Type&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:244:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  244 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:244:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  244 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const FieldField<Field, Type>&, const Type&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:260:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  260 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:260:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  260 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const tmp<FieldField<Field, Type> >&, const Type&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:272:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  272 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:272:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  272 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const GeometricField<Type, PatchField, GeoMesh>&)’
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:430:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  430 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note:   template argument deduction/substitution failed:
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:430:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  430 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:452:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  452 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note:   template argument deduction/substitution failed:
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:452:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  452 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:167:6: note: in definition of macro ‘BINARY_FUNCTION’
  167 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:167:6: note: in definition of macro ‘BINARY_FUNCTION’
  167 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:196:54: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:196:54: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const GeometricField<Type, PatchField, GeoMesh>&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:216:54: note: in definition of macro ‘BINARY_FUNCTION’
  216 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:216:54: note: in definition of macro ‘BINARY_FUNCTION’
  216 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const GeometricField<Type, PatchField, GeoMesh>&)’
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:239:54: note: in definition of macro ‘BINARY_FUNCTION’
  239 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:239:54: note: in definition of macro ‘BINARY_FUNCTION’
  239 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:262:54: note: in definition of macro ‘BINARY_FUNCTION’
  262 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:262:54: note: in definition of macro ‘BINARY_FUNCTION’
  262 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:294:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:294:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const dimensioned<Type>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:313:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  313 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:313:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  313 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const GeometricField<Type, PatchField, GeoMesh>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:333:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  333 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:333:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  333 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const dimensioned<Type>&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:344:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  344 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:344:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  344 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:367:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  367 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:367:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  367 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:380:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  380 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:380:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  380 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:399:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  399 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:399:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  399 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:419:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  419 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:419:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  419 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const dimensioned<Type>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:430:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  430 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:430:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  430 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:453:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  453 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:453:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  453 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::max(const UniformField<Type>&, const UniformField<Type>&)’
   64 | inline UniformField<Type> max
      |                           ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const UniformField<Type>&, const OtherType&)’
   75 | inline OtherType max(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const OtherType&, const UniformField<Type>&)’
   82 | inline OtherType max(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UniformField<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int8_t Foam::max(int8_t, int8_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int16_t Foam::max(int16_t, int16_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int32_t Foam::max(int32_t, int32_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int64_t Foam::max(int64_t, int32_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int64_t Foam::max(int32_t, int64_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int64_t Foam::max(int64_t, int64_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(double, double)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:55:1: note: in expansion of macro ‘MAXMINPOW’
   55 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:55:1: note: in expansion of macro ‘MAXMINPOW’
   55 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(double, float)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:56:1: note: in expansion of macro ‘MAXMINPOW’
   56 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:56:1: note: in expansion of macro ‘MAXMINPOW’
   56 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(float, double)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:57:1: note: in expansion of macro ‘MAXMINPOW’
   57 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:57:1: note: in expansion of macro ‘MAXMINPOW’
   57 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(double, int)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:58:1: note: in expansion of macro ‘MAXMINPOW’
   58 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:58:1: note: in expansion of macro ‘MAXMINPOW’
   58 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(int, double)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:59:1: note: in expansion of macro ‘MAXMINPOW’
   59 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:59:1: note: in expansion of macro ‘MAXMINPOW’
   59 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(double, long int)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:60:1: note: in expansion of macro ‘MAXMINPOW’
   60 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:60:1: note: in expansion of macro ‘MAXMINPOW’
   60 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(long int, double)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:61:1: note: in expansion of macro ‘MAXMINPOW’
   61 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:61:1: note: in expansion of macro ‘MAXMINPOW’
   61 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘float Foam::max(float, float)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:62:1: note: in expansion of macro ‘MAXMINPOW’
   62 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:62:1: note: in expansion of macro ‘MAXMINPOW’
   62 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘float Foam::max(float, int)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘float Foam::max(int, float)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘float Foam::max(float, long int)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘float Foam::max(long int, float)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint8_t Foam::max(uint8_t, uint8_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint16_t Foam::max(uint16_t, uint16_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint32_t Foam::max(uint32_t, uint32_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint32_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint32_t, uint64_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint64_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:116:13: note: candidate: ‘Foam::zero Foam::max(const zero&, const zero&)’
  116 | inline zero max(const zero&, const zero&)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:116:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
  116 | inline zero max(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:123:29: note: candidate: ‘constexpr const Foam::one& Foam::max(const one&, const one&)’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:123:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.H:437:7: note: candidate: ‘Foam::label Foam::max(const labelHashSet&, label)’
  437 | label max(const labelHashSet& set, label maxValue = labelMin);
      |       ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.H:437:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  437 | label max(const labelHashSet& set, label maxValue = labelMin);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:232:23: note: candidate: ‘const Foam::complex& Foam::max(const complex&, const complex&)’
  232 | inline const complex& max(const complex& c1, const complex& c2)
      |                       ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:232:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  232 | inline const complex& max(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:358:14: note: candidate: ‘Foam::dimensionSet Foam::max(const dimensionSet&, const dimensionSet&)’
  358 | dimensionSet max(const dimensionSet& a, const dimensionSet& b);
      |              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:358:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  358 | dimensionSet max(const dimensionSet& a, const dimensionSet& b);
      |                  ~~~~~~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:176:14: note: candidate: ‘Foam::orientedType Foam::max(const orientedType&, const orientedType&)’
  176 | orientedType max(const orientedType& a, const orientedType& b);
      |              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:176:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  176 | orientedType max(const orientedType& a, const orientedType& b);
      |                  ~~~~~~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C: In instantiation of ‘void Foam::MULES::limiter(Foam::scalarField&, const RdeltaTType&, const RhoType&, const Foam::volScalarField&, const Foam::surfaceScalarField&, const Foam::surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&) [with RdeltaTType = double; RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = Foam::dimensioned<double>; PsiMinType = Foam::dimensioned<double>; Foam::scalarField = Foam::Field<double>; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:634:5:   required from ‘void Foam::MULES::limit(const RdeltaTType&, const RhoType&, const Foam::volScalarField&, const Foam::surfaceScalarField&, Foam::surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&, bool) [with RdeltaTType = double; RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = Foam::dimensioned<double>; PsiMinType = Foam::dimensioned<double>; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:179:14:   required from ‘void Foam::MULES::explicitSolve(const RhoType&, Foam::volScalarField&, const Foam::surfaceScalarField&, Foam::surfaceScalarField&, const SpType&, const SuType&, const PsiMaxType&, const PsiMinType&) [with RhoType = Foam::geometricOneField; SpType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; SuType = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; PsiMaxType = Foam::dimensioned<double>; PsiMinType = Foam::dimensioned<double>; Foam::volScalarField = Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>; Foam::surfaceScalarField = Foam::GeometricField<double, Foam::fvsPatchField, Foam::surfaceMesh>]’
alphaEqn.H:42:9:   required from here
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:282:13: error: no match for ‘operator=’ (operand types are ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} and ‘const Foam::dimensioned<double>’)
  282 |     psiMaxn = psiMin;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:491:21: note: candidate: ‘template<class Addr> void Foam::Field<Type>::operator=(const Foam::IndirectListBase<T, Addr>&) [with Type = double]’
  491 |         inline void operator=(const IndirectListBase<Type, Addr>& rhs);
      |                     ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:491:21: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:282:13: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::IndirectListBase<double, Addr>’
  282 |     psiMaxn = psiMin;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:498:21: note: candidate: ‘template<int SizeMin> void Foam::Field<Type>::operator=(Foam::DynamicList<T, SizeMin>&&) [with int SizeMin = SizeMin; Type = double]’
  498 |         inline void operator=(DynamicList<Type, SizeMin>&& rhs);
      |                     ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:498:21: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:282:13: note:   types ‘Foam::DynamicList<double, SizeMin>’ and ‘const Foam::dimensioned<double>’ have incompatible cv-qualifiers
  282 |     psiMaxn = psiMin;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:507:14: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt> void Foam::Field<Type>::operator=(const Foam::VectorSpace<Form, Cmpt, nCmpt>&) [with Cmpt = Form; unsigned char nCmpt = Cmpt; Type = double]’
  507 |         void operator=(const VectorSpace<Form,Cmpt,nCmpt>&);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:507:14: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:282:13: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  282 |     psiMaxn = psiMin;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:754:6: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::Field<Type>&) [with Type = double]’
  754 | void Foam::Field<Type>::operator=(const Field<Type>& rhs)
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:754:54: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::Field<double>&’
  754 | void Foam::Field<Type>::operator=(const Field<Type>& rhs)
      |                                   ~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:766:6: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::tmp<Foam::Field<Type> >&) [with Type = double]’
  766 | void Foam::Field<Type>::operator=(const tmp<Field>& rhs)
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:766:53: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::tmp<Foam::Field<double> >&’
  766 | void Foam::Field<Type>::operator=(const tmp<Field>& rhs)
      |                                   ~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:158:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::UList<T>&) [with Type = double]’
  158 | inline void Foam::Field<Type>::operator=(const UList<Type>& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:158:61: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::UList<double>&’
  158 | inline void Foam::Field<Type>::operator=(const UList<Type>& rhs)
      |                                          ~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:165:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::SubField<Type>&) [with Type = double]’
  165 | inline void Foam::Field<Type>::operator=(const SubField<Type>& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:165:64: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::SubField<double>&’
  165 | inline void Foam::Field<Type>::operator=(const SubField<Type>& rhs)
      |                                          ~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:183:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::Field<Type>&&) [with Type = double]’
  183 | inline void Foam::Field<Type>::operator=(Field<Type>&& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:183:56: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::Field<double>&&’
  183 | inline void Foam::Field<Type>::operator=(Field<Type>&& rhs)
      |                                          ~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:190:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::List<T>&&) [with Type = double]’
  190 | inline void Foam::Field<Type>::operator=(List<Type>&& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:190:55: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::List<double>&&’
  190 | inline void Foam::Field<Type>::operator=(List<Type>&& rhs)
      |                                          ~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:205:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Type&) [with Type = double]’
  205 | inline void Foam::Field<Type>::operator=(const Type& val)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:205:54: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const double&’
  205 | inline void Foam::Field<Type>::operator=(const Type& val)
      |                                          ~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:212:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::zero) [with Type = double]’
  212 | inline void Foam::Field<Type>::operator=(const Foam::zero)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:212:42: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::zero’
  212 | inline void Foam::Field<Type>::operator=(const Foam::zero)
      |                                          ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:283:13: error: no match for ‘operator=’ (operand types are ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} and ‘const Foam::dimensioned<double>’)
  283 |     psiMinn = psiMax;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:491:21: note: candidate: ‘template<class Addr> void Foam::Field<Type>::operator=(const Foam::IndirectListBase<T, Addr>&) [with Type = double]’
  491 |         inline void operator=(const IndirectListBase<Type, Addr>& rhs);
      |                     ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:491:21: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:283:13: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::IndirectListBase<double, Addr>’
  283 |     psiMinn = psiMax;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:498:21: note: candidate: ‘template<int SizeMin> void Foam::Field<Type>::operator=(Foam::DynamicList<T, SizeMin>&&) [with int SizeMin = SizeMin; Type = double]’
  498 |         inline void operator=(DynamicList<Type, SizeMin>&& rhs);
      |                     ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:498:21: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:283:13: note:   types ‘Foam::DynamicList<double, SizeMin>’ and ‘const Foam::dimensioned<double>’ have incompatible cv-qualifiers
  283 |     psiMinn = psiMax;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:507:14: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt> void Foam::Field<Type>::operator=(const Foam::VectorSpace<Form, Cmpt, nCmpt>&) [with Cmpt = Form; unsigned char nCmpt = Cmpt; Type = double]’
  507 |         void operator=(const VectorSpace<Form,Cmpt,nCmpt>&);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.H:507:14: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:283:13: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  283 |     psiMinn = psiMax;
      |     ~~~~~~~~^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:754:6: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::Field<Type>&) [with Type = double]’
  754 | void Foam::Field<Type>::operator=(const Field<Type>& rhs)
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:754:54: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::Field<double>&’
  754 | void Foam::Field<Type>::operator=(const Field<Type>& rhs)
      |                                   ~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:766:6: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::tmp<Foam::Field<Type> >&) [with Type = double]’
  766 | void Foam::Field<Type>::operator=(const tmp<Field>& rhs)
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Field.C:766:53: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::tmp<Foam::Field<double> >&’
  766 | void Foam::Field<Type>::operator=(const tmp<Field>& rhs)
      |                                   ~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:158:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::UList<T>&) [with Type = double]’
  158 | inline void Foam::Field<Type>::operator=(const UList<Type>& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:158:61: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::UList<double>&’
  158 | inline void Foam::Field<Type>::operator=(const UList<Type>& rhs)
      |                                          ~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:165:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Foam::SubField<Type>&) [with Type = double]’
  165 | inline void Foam::Field<Type>::operator=(const SubField<Type>& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:165:64: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const Foam::SubField<double>&’
  165 | inline void Foam::Field<Type>::operator=(const SubField<Type>& rhs)
      |                                          ~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:183:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::Field<Type>&&) [with Type = double]’
  183 | inline void Foam::Field<Type>::operator=(Field<Type>&& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:183:56: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::Field<double>&&’
  183 | inline void Foam::Field<Type>::operator=(Field<Type>&& rhs)
      |                                          ~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:190:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::List<T>&&) [with Type = double]’
  190 | inline void Foam::Field<Type>::operator=(List<Type>&& rhs)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:190:55: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::List<double>&&’
  190 | inline void Foam::Field<Type>::operator=(List<Type>&& rhs)
      |                                          ~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:205:13: note: candidate: ‘void Foam::Field<Type>::operator=(const Type&) [with Type = double]’
  205 | inline void Foam::Field<Type>::operator=(const Type& val)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:205:54: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘const double&’
  205 | inline void Foam::Field<Type>::operator=(const Type& val)
      |                                          ~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:212:13: note: candidate: ‘void Foam::Field<Type>::operator=(Foam::zero) [with Type = double]’
  212 | inline void Foam::Field<Type>::operator=(const Foam::zero)
      |             ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldI.H:212:42: note:   no known conversion for argument 1 from ‘const Foam::dimensioned<double>’ to ‘Foam::zero’
  212 | inline void Foam::Field<Type>::operator=(const Foam::zero)
      |                                          ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:357:35: error: cannot convert ‘Foam::dimensioned<double>’ to ‘const Foam::scalar’ {aka ‘const double’} in initialization
  357 |                      const scalar extrema =
      |                                   ^~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: error: no match for ‘operator+’ (operand types are ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} and ‘Foam::dimensioned<double>’)
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:45:30: note: candidate: ‘template<class Type> constexpr const Type& Foam::operator+(const Type&, const zero&)’
   45 | inline constexpr const Type& operator+(const Type& val, const zero&) noexcept
      |                              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:45:30: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   cannot convert ‘Foam::operator*(const dimensioned<double>&, const dimensioned<Type>&) [with Type = double](Foam::operator-(const dimensioned<Type>&, const dimensioned<Type>&) [with Type = double]((* & psiMin)))’ (type ‘Foam::dimensioned<double>’) to type ‘const Foam::zero&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:51:30: note: candidate: ‘template<class Type> constexpr const Type& Foam::operator+(const zero&, const Type&)’
   51 | inline constexpr const Type& operator+(const zero&, const Type& val) noexcept
      |                              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:51:30: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:19: note:   cannot convert ‘psiMaxn’ (type ‘Foam::scalarField’ {aka ‘Foam::Field<double>’}) to type ‘const Foam::zero&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ^~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:730:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  730 | inline Form operator+
      |             ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:730:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/MinMaxOps.H:316:18: note: candidate: ‘template<class T> Foam::MinMax<Type> Foam::operator+(const MinMax<Type>&, const MinMax<Type>&)’
  316 | inline MinMax<T> operator+(const MinMax<T>& x, const MinMax<T>& y)
      |                  ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/MinMaxOps.H:316:18: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::MinMax<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:782:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const UList<T>&, const UList<Key>&)’
  782 | operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:782:1: note:   template argument deduction/substitution failed:
  782 | operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<Key>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:792:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const UList<T>&, const tmp<Field<Type2> >&)’
  792 | operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:792:1: note:   template argument deduction/substitution failed:
  792 | operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type2> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:803:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<Field<Type> >&, const UList<Key>&)’
  803 | operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:803:1: note:   template argument deduction/substitution failed:
  803 | operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:814:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<Field<Type> >&, const tmp<Field<Type2> >&)’
  814 | operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:814:1: note:   template argument deduction/substitution failed:
  814 | operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:839:1: note: candidate: ‘template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const UList<T>&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  839 | operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:839:1: note:   template argument deduction/substitution failed:
  839 | operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:849:1: note: candidate: ‘template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<Field<Type> >&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  849 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:849:1: note:   template argument deduction/substitution failed:
  849 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:877:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const UList<Type>&)’
  877 | operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:877:1: note:   template argument deduction/substitution failed:
  877 | operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:887:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<Field<Type> >&)’
  887 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:887:1: note:   template argument deduction/substitution failed:
  887 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:899:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  899 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:939:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const SphericalTensor<Cmpt>&, const Tensor<Cmpt>&)’
  939 | operator+(const SphericalTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:939:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SphericalTensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:953:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Tensor<Cmpt>&, const SphericalTensor<Cmpt>&)’
  953 | operator+(const Tensor<Cmpt>& t1, const SphericalTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:953:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:967:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const SymmTensor<Cmpt>&, const Tensor<Cmpt>&)’
  967 | operator+(const SymmTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:967:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SymmTensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:981:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Tensor<Cmpt>&, const SymmTensor<Cmpt>&)’
  981 | operator+(const Tensor<Cmpt>& t1, const SymmTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:981:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:651:1: note: candidate: ‘template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator+(const SphericalTensor<Cmpt>&, const SymmTensor<Cmpt>&)’
  651 | operator+(const SphericalTensor<Cmpt>& spt1, const SymmTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:651:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SphericalTensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:665:1: note: candidate: ‘template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator+(const SymmTensor<Cmpt>&, const SphericalTensor<Cmpt>&)’
  665 | operator+(const SymmTensor<Cmpt>& st1, const SphericalTensor<Cmpt>& spt2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:665:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SymmTensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:778:7: note: candidate: ‘template<class Form1, class Form2, class Type> Form1 Foam::operator+(const Matrix<Form1, Type>&, const Matrix<Form2, Type>&)’
  778 | Form1 operator+
      |       ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:778:7: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Matrix<Form1, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:872:6: note: candidate: ‘template<class Form, class Type> Form Foam::operator+(const Type&, const Matrix<Form, Type>&)’
  872 | Form operator+(const Type& s, const Matrix<Form, Type>& mat)
      |      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:872:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::Matrix<Form, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:890:6: note: candidate: ‘template<class Form, class Type> Form Foam::operator+(const Matrix<Form, Type>&, const Type&)’
  890 | Form operator+(const Matrix<Form, Type>& mat, const Type& s)
      |      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:890:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Matrix<Form, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:820:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::operator+(const dimensioned<Type>&, const dimensioned<Type>&)’
  820 | Foam::dimensioned<Type> Foam::operator+
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:820:25: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:549:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const dimensioned<double>&, const DimensionedField<double, GeoMesh>&)’
  549 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:549:44: note:   template argument deduction/substitution failed:
  549 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:569:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const scalar&, const DimensionedField<double, GeoMesh>&)’
  569 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:569:44: note:   template argument deduction/substitution failed:
  569 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:580:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const dimensioned<double>&, const tmp<DimensionedField<double, GeoMesh> >&)’
  580 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:580:44: note:   template argument deduction/substitution failed:
  580 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:603:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const scalar&, const tmp<DimensionedField<double, GeoMesh> >&)’
  603 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:603:44: note:   template argument deduction/substitution failed:
  603 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:629:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const DimensionedField<double, GeoMesh>&, const dimensioned<double>&)’
  629 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:629:44: note:   template argument deduction/substitution failed:
  629 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const DimensionedField<double, GeoMesh>&, const scalar&)’
  649 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note:   template argument deduction/substitution failed:
  649 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:660:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const tmp<DimensionedField<double, GeoMesh> >&, const dimensioned<double>&)’
  660 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:660:44: note:   template argument deduction/substitution failed:
  660 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:683:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const tmp<DimensionedField<double, GeoMesh> >&, const scalar&)’
  683 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:683:44: note:   template argument deduction/substitution failed:
  683 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:416:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const DimensionedField<TypeR, GeoMesh>&, const DimensionedField<Type1, GeoMesh>&)’
  416 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:416:1: note:   template argument deduction/substitution failed:
  416 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<TypeR, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:440:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const DimensionedField<TypeR, GeoMesh>&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  440 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:440:1: note:   template argument deduction/substitution failed:
  440 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<TypeR, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:467:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const tmp<DimensionedField<TypeR, GeoMesh> >&, const DimensionedField<Type1, GeoMesh>&)’
  467 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:467:1: note:   template argument deduction/substitution failed:
  467 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:494:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const tmp<DimensionedField<TypeR, GeoMesh> >&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  494 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:494:1: note:   template argument deduction/substitution failed:
  494 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:525:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator+(const DimensionedField<Type1, GeoMesh>&, const dimensioned<Type>&)’
  525 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:525:1: note:   template argument deduction/substitution failed:
  525 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type1, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:549:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const DimensionedField<Type2, GeoMesh>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  549 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:549:1: note:   template argument deduction/substitution failed:
  549 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type2, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:561:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator+(const tmp<DimensionedField<Type1, GeoMesh> >&, const dimensioned<Type>&)’
  561 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:561:1: note:   template argument deduction/substitution failed:
  561 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:588:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const tmp<DimensionedField<Type2, GeoMesh> >&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  588 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:588:1: note:   template argument deduction/substitution failed:
  588 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type2, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:600:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const dimensioned<Type>&, const DimensionedField<Type1, GeoMesh>&)’
  600 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:600:1: note:   template argument deduction/substitution failed:
  600 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:624:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const DimensionedField<Type2, GeoMesh>&)’
  624 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:624:1: note:   template argument deduction/substitution failed:
  624 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:636:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const dimensioned<Type>&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  636 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:636:1: note:   template argument deduction/substitution failed:
  636 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:663:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<DimensionedField<Type2, GeoMesh> >&)’
  663 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:663:1: note:   template argument deduction/substitution failed:
  663 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:673:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  673 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:388:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const scalar&, const FieldField<Field, double>&)’
  388 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:388:36: note:   template argument deduction/substitution failed:
  388 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::FieldField<Field, double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:400:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const scalar&, const tmp<FieldField<Field, double> >&)’
  400 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:400:36: note:   template argument deduction/substitution failed:
  400 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:432:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const FieldField<Field, double>&, const scalar&)’
  432 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:432:36: note:   template argument deduction/substitution failed:
  432 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, double>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:444:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const tmp<FieldField<Field, double> >&, const scalar&)’
  444 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:444:36: note:   template argument deduction/substitution failed:
  444 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:88:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   88 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:691:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const FieldField<Field, Type1>&, const FieldField<Field2, Type2>&)’
  691 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:691:1: note:   template argument deduction/substitution failed:
  691 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:705:1: note: candidate: ‘template<template<class> class Field, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const FieldField<Field, Type>&, const tmp<FieldField<Field, Type1> >&)’
  705 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:705:1: note:   template argument deduction/substitution failed:
  705 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:361:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const FieldField<Field, Type1>&, const tmp<FieldField<Field2, Type2> >&)’
  361 | operator op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:485:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  485 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:361:1: note:   template argument deduction/substitution failed:
  361 | operator op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:485:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  485 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:747:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<FieldField<Field, Type1> >&, const FieldField<Field2, Type2>&)’
  747 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:747:1: note:   template argument deduction/substitution failed:
  747 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type1> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:768:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<FieldField<Field, Type1> >&, const tmp<FieldField<Field2, Type2> >&)’
  768 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:768:1: note:   template argument deduction/substitution failed:
  768 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type1> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:818:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const FieldField<Field, Type>&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:818:1: note:   template argument deduction/substitution failed:
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:839:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const tmp<FieldField<Field, Type> >&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  839 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:839:1: note:   template argument deduction/substitution failed:
  839 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:884:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const VectorSpace<Form, Cmpt, nCmpt>&, const FieldField<Field, Type>&)’
  884 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:884:1: note:   template argument deduction/substitution failed:
  884 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:905:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const VectorSpace<Form, Cmpt, nCmpt>&, const tmp<FieldField<Field, Type> >&)’
  905 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:905:1: note:   template argument deduction/substitution failed:
  905 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:726:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Foam::Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const FieldField<Field, Type1>&, const tmp<FieldField<Field2, Type2> >&)’
  726 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:726:1: note:   template argument deduction/substitution failed:
  726 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:918:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  918 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:196:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const DiagTensor<Cmpt>&, const Tensor<Cmpt>&)’
  196 | operator+(const DiagTensor<Cmpt>& dt1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:196:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DiagTensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:210:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Tensor<Cmpt>&, const DiagTensor<Cmpt>&)’
  210 | operator+(const Tensor<Cmpt>& t1, const DiagTensor<Cmpt>& dt2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:210:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:650:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const GeometricField<TypeR, PatchField, GeoMesh>&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  650 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:650:1: note:   template argument deduction/substitution failed:
  650 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<TypeR, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:678:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const GeometricField<TypeR, PatchField, GeoMesh>&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  678 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:678:1: note:   template argument deduction/substitution failed:
  678 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<TypeR, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:708:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<TypeR, PatchField, GeoMesh> >&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  708 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:708:1: note:   template argument deduction/substitution failed:
  708 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:738:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<TypeR, PatchField, GeoMesh> >&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  738 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:738:1: note:   template argument deduction/substitution failed:
  738 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:788:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator+(const GeometricField<Type1, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  788 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:788:1: note:   template argument deduction/substitution failed:
  788 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<Type1, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:818:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const GeometricField<Type2, PatchField, GeoMesh>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:818:1: note:   template argument deduction/substitution failed:
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<Type2, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:831:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<Type1, PatchField, GeoMesh> >&, const dimensioned<Type>&)’
  831 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:831:1: note:   template argument deduction/substitution failed:
  831 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:864:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<Type2, PatchField, GeoMesh> >&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  864 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:864:1: note:   template argument deduction/substitution failed:
  864 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type2, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:896:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const dimensioned<Type>&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  896 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:896:1: note:   template argument deduction/substitution failed:
  896 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:926:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const GeometricField<Type2, PatchField, GeoMesh>&)’
  926 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:926:1: note:   template argument deduction/substitution failed:
  926 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:938:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const dimensioned<Type>&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  938 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:938:1: note:   template argument deduction/substitution failed:
  938 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:971:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<GeometricField<Type2, PatchField, GeoMesh> >&)’
  971 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:971:1: note:   template argument deduction/substitution failed:
  971 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:981:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  981 | PRODUCT_OPERATOR(typeOfSum, +, add)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:617:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const dimensioned<double>&, const GeometricField<double, PatchField, GeoMesh>&)’
  617 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:617:54: note:   template argument deduction/substitution failed:
  617 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:637:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const scalar&, const GeometricField<double, PatchField, GeoMesh>&)’
  637 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:637:54: note:   template argument deduction/substitution failed:
  637 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:648:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const dimensioned<double>&, const tmp<GeometricField<double, PatchField, GeoMesh> >&)’
  648 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:648:54: note:   template argument deduction/substitution failed:
  648 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:671:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const scalar&, const tmp<GeometricField<double, PatchField, GeoMesh> >&)’
  671 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:671:54: note:   template argument deduction/substitution failed:
  671 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:703:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const GeometricField<double, PatchField, GeoMesh>&, const dimensioned<double>&)’
  703 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:703:54: note:   template argument deduction/substitution failed:
  703 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:723:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const GeometricField<double, PatchField, GeoMesh>&, const scalar&)’
  723 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:723:54: note:   template argument deduction/substitution failed:
  723 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:734:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<double, PatchField, GeoMesh> >&, const dimensioned<double>&)’
  734 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:734:54: note:   template argument deduction/substitution failed:
  734 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const tmp<GeometricField<double, PatchField, GeoMesh> >&, const scalar&)’
  757 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:54: note:   template argument deduction/substitution failed:
  757 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  103 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:39:20: note: candidate: ‘template<class Type> const Type& Foam::operator+(const Type&, const zeroField&)’
   39 | inline const Type& operator+(const Type& t, const zeroField&)
      |                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:39:20: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   cannot convert ‘Foam::operator*(const dimensioned<double>&, const dimensioned<Type>&) [with Type = double](Foam::operator-(const dimensioned<Type>&, const dimensioned<Type>&) [with Type = double]((* & psiMin)))’ (type ‘Foam::dimensioned<double>’) to type ‘const Foam::zeroField&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:45:20: note: candidate: ‘template<class Type> const Type& Foam::operator+(const zeroField&, const Type&)’
   45 | inline const Type& operator+(const zeroField&, const Type& t)
      |                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:45:20: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:19: note:   cannot convert ‘psiMaxn’ (type ‘Foam::scalarField’ {aka ‘Foam::Field<double>’}) to type ‘const Foam::zeroField&’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ^~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2222:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const fvMatrix<Type>&)’
 2222 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2222:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2235:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const fvMatrix<Type>&)’
 2235 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2235:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2248:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const tmp<fvMatrix<Type> >&)’
 2248 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2248:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2261:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const tmp<fvMatrix<Type> >&)’
 2261 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2261:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2275:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const DimensionedField<Type, volMesh>&)’
 2275 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2275:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2288:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const tmp<DimensionedField<Type, volMesh> >&)’
 2288 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2288:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2302:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const tmp<GeometricField<Type, fvPatchField, volMesh> >&)’
 2302 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2302:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2316:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const DimensionedField<Type, volMesh>&)’
 2316 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2316:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2329:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const tmp<DimensionedField<Type, volMesh> >&)’
 2329 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2329:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2343:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const tmp<GeometricField<Type, fvPatchField, volMesh> >&)’
 2343 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2343:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2357:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const DimensionedField<Type, volMesh>&, const fvMatrix<Type>&)’
 2357 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2357:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type, Foam::volMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2370:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<DimensionedField<Type, volMesh> >&, const fvMatrix<Type>&)’
 2370 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2370:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2384:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<GeometricField<Type, fvPatchField, volMesh> >&, const fvMatrix<Type>&)’
 2384 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2384:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2398:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const DimensionedField<Type, volMesh>&, const tmp<fvMatrix<Type> >&)’
 2398 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2398:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type, Foam::volMesh>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2411:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<DimensionedField<Type, volMesh> >&, const tmp<fvMatrix<Type> >&)’
 2411 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2411:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2425:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<GeometricField<Type, fvPatchField, volMesh> >&, const tmp<fvMatrix<Type> >&)’
 2425 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2425:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2664:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const fvMatrix<Type>&, const dimensioned<Type>&)’
 2664 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2664:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2677:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const tmp<fvMatrix<Type> >&, const dimensioned<Type>&)’
 2677 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2677:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2690:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const dimensioned<Type>&, const fvMatrix<Type>&)’
 2690 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2690:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2703:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const dimensioned<Type>&, const tmp<fvMatrix<Type> >&)’
 2703 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2703:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:386:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  386 |     psiMaxn = min(psiMaxn + extremaCoeff*(psiMax - psiMin), psiMax);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:39:23: note: candidate: ‘constexpr Foam::zero Foam::operator+(const zero&, const zero&)’
   39 | inline constexpr zero operator+(const zero&, const zero&) noexcept
      |                       ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:39:33: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::zero&’
   39 | inline constexpr zero operator+(const zero&, const zero&) noexcept
      |                                 ^~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:46:15: note: candidate: ‘Foam::scalar Foam::operator+(const scalar&, const one&)’
   46 | inline scalar operator+(const scalar& t, const one&) noexcept
      |               ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:46:39: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
   46 | inline scalar operator+(const scalar& t, const one&) noexcept
      |                         ~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:51:15: note: candidate: ‘Foam::scalar Foam::operator+(const one&, const scalar&)’
   51 | inline scalar operator+(const one&, const scalar& t) noexcept
      |               ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:51:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::one&’
   51 | inline scalar operator+(const one&, const scalar& t) noexcept
      |                         ^~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dictionary.H:1553:12: note: candidate: ‘Foam::dictionary Foam::operator+(const dictionary&, const dictionary&)’
 1553 | dictionary operator+(const dictionary& dict1, const dictionary& dict2);
      |            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dictionary.H:1553:40: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::dictionary&’
 1553 | dictionary operator+(const dictionary& dict1, const dictionary& dict2);
      |                      ~~~~~~~~~~~~~~~~~~^~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:284:16: note: candidate: ‘Foam::complex Foam::operator+(const complex&, const complex&)’
  284 | inline complex operator+(const complex& c1, const complex& c2)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:284:41: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::complex&’
  284 | inline complex operator+(const complex& c1, const complex& c2)
      |                          ~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:294:16: note: candidate: ‘Foam::complex Foam::operator+(const complex&, scalar)’
  294 | inline complex operator+(const complex& c, const scalar s)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:294:41: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::complex&’
  294 | inline complex operator+(const complex& c, const scalar s)
      |                          ~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:300:16: note: candidate: ‘Foam::complex Foam::operator+(scalar, const complex&)’
  300 | inline complex operator+(const scalar s, const complex& c)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:300:39: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘Foam::scalar’ {aka ‘double’}
  300 | inline complex operator+(const scalar s, const complex& c)
      |                          ~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator+(const scalar&, const UList<double>&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator+(const scalar&, const tmp<Field<double> >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator+(const UList<double>&, const scalar&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:257:18: note:   no known conversion for argument 2 from ‘Foam::dimensioned<double>’ to ‘const Foam::scalar&’ {aka ‘const double&’}
  257 |     const Type2& s2                                                            \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator+(const tmp<Field<double> >&, const scalar&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:264:18: note:   no known conversion for argument 2 from ‘Foam::dimensioned<double>’ to ‘const Foam::scalar&’ {aka ‘const double&’}
  264 |     const Type2& s2                                                            \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   91 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:420:14: note: candidate: ‘Foam::dimensionSet Foam::operator+(const dimensionSet&, const dimensionSet&)’
  420 | dimensionSet operator+(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:420:44: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::dimensionSet&’
  420 | dimensionSet operator+(const dimensionSet& ds1, const dimensionSet& ds2);
      |                        ~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:52:19: note: candidate: ‘Foam::dimensionedScalar Foam::operator+(const dimensionedScalar&, scalar)’
   52 | dimensionedScalar operator+(const dimensionedScalar&, const scalar);
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:52:29: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::dimensionedScalar&’ {aka ‘const Foam::dimensioned<double>&’}
   52 | dimensionedScalar operator+(const dimensionedScalar&, const scalar);
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:53:19: note: candidate: ‘Foam::dimensionedScalar Foam::operator+(scalar, const dimensionedScalar&)’
   53 | dimensionedScalar operator+(const scalar, const dimensionedScalar&);
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:53:29: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘Foam::scalar’ {aka ‘double’}
   53 | dimensionedScalar operator+(const scalar, const dimensionedScalar&);
      |                             ^~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator+(const label&, const UList<int>&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::label&’ {aka ‘const int&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator+(const label&, const tmp<Field<int> >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::label&’ {aka ‘const int&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator+(const UList<int>&, const label&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:256:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<int>&’
  256 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator+(const tmp<Field<int> >&, const label&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:263:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<int> >&’
  263 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:56:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   56 | BINARY_TYPE_OPERATOR(label, label, label, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:219:14: note: candidate: ‘Foam::orientedType Foam::operator+(const orientedType&, const orientedType&)’
  219 | orientedType operator+(const orientedType& ot1, const orientedType& ot2);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:219:44: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::orientedType&’
  219 | orientedType operator+(const orientedType& ot1, const orientedType& ot2);
      |                        ~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:254:36: note: candidate: ‘Foam::vectorTensorTransform Foam::operator+(const vectorTensorTransform&, const vector&)’
  254 | inline Foam::vectorTensorTransform Foam::operator+
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:256:34: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::vectorTensorTransform&’
  256 |     const vectorTensorTransform& tr,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:264:36: note: candidate: ‘Foam::vectorTensorTransform Foam::operator+(const vector&, const vectorTensorTransform&)’
  264 | inline Foam::vectorTensorTransform Foam::operator+
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:266:19: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::vector&’ {aka ‘const Foam::Vector<double>&’}
  266 |     const vector& t,
      |     ~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:188:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const UList<DiagTensor<double> >&, const UList<Tensor<double> >&)’
  188 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:190:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  190 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:195:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const UList<DiagTensor<double> >&, const tmp<Field<Tensor<double> > >&)’
  195 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:197:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  197 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:202:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const tmp<Field<DiagTensor<double> > >&, const UList<Tensor<double> >&)’
  202 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:204:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  204 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:209:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const tmp<Field<DiagTensor<double> > >&, const tmp<Field<Tensor<double> > >&)’
  209 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:211:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  211 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
   62 | BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const diagTensor&, const UList<Tensor<double> >&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::diagTensor&’ {aka ‘const Foam::DiagTensor<double>&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const diagTensor&, const tmp<Field<Tensor<double> > >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::diagTensor&’ {aka ‘const Foam::DiagTensor<double>&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const UList<DiagTensor<double> >&, const tensor&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:256:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  256 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const tmp<Field<DiagTensor<double> > >&, const tensor&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:263:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  263 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:65:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   65 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:710:25: note: candidate: ‘Foam::quaternion Foam::operator+(const quaternion&, const quaternion&)’
  710 | inline Foam::quaternion Foam::operator+
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:712:23: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::quaternion&’
  712 |     const quaternion& q1,
      |     ~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:188:25: note: candidate: ‘Foam::septernion Foam::operator+(const septernion&, const vector&)’
  188 | inline Foam::septernion Foam::operator+
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:190:23: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::septernion&’
  190 |     const septernion& tr,
      |     ~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:198:25: note: candidate: ‘Foam::septernion Foam::operator+(const vector&, const septernion&)’
  198 | inline Foam::septernion Foam::operator+
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:200:19: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::vector&’ {aka ‘const Foam::Vector<double>&’}
  200 |     const vector& t,
      |     ~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:33:24: note: candidate: ‘const Foam::zeroField Foam::operator+(const zeroField&, const zeroField&)’
   33 | inline const zeroField operator+(const zeroField&, const zeroField&)
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:33:34: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::zeroField&’
   33 | inline const zeroField operator+(const zeroField&, const zeroField&)
      |                                  ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/clockValue.H:139:19: note: candidate: ‘Foam::clockValue Foam::operator+(const clockValue&, const clockValue&)’
  139 | inline clockValue operator+(const clockValue& a, const clockValue& b)
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/clockValue.H:139:47: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::clockValue&’
  139 | inline clockValue operator+(const clockValue& a, const clockValue& b)
      |                             ~~~~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: error: no match for ‘operator-’ (operand types are ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} and ‘Foam::dimensioned<double>’)
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:62:30: note: candidate: ‘template<class Type> constexpr const Type& Foam::operator-(const Type&, const zero&)’
   62 | inline constexpr const Type& operator-(const Type& val, const zero&) noexcept
      |                              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:62:30: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   cannot convert ‘Foam::operator*(const dimensioned<double>&, const dimensioned<Type>&) [with Type = double](Foam::operator-(const dimensioned<Type>&, const dimensioned<Type>&) [with Type = double]((* & psiMin)))’ (type ‘Foam::dimensioned<double>’) to type ‘const Foam::zero&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:68:23: note: candidate: ‘template<class Type> constexpr Type Foam::operator-(const zero&, const Type&)’
   68 | inline constexpr Type operator-(const zero&, const Type& val)
      |                       ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:68:23: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:19: note:   cannot convert ‘psiMinn’ (type ‘Foam::scalarField’ {aka ‘Foam::Field<double>’}) to type ‘const Foam::zero&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ^~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.C:436:26: note: candidate: ‘template<class Key, class Hash> Foam::HashSet<Key, Hash> Foam::operator-(const HashSet<Key, Hash>&, const HashSet<Key, Hash>&)’
  436 | Foam::HashSet<Key, Hash> Foam::operator-
      |                          ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.C:436:26: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::HashSet<Key, Hash>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:718:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&)’
  718 | inline Form operator-
      |             ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:718:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:742:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  742 | inline Form operator-
      |             ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:742:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:85:24: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator-(const UList<T>&)’
   85 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:752:1: note: in expansion of macro ‘UNARY_OPERATOR’
  752 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:85:24: note:   template argument deduction/substitution failed:
   85 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:752:1: note: in expansion of macro ‘UNARY_OPERATOR’
  752 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   candidate expects 1 argument, 2 provided
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:96:24: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator-(const tmp<Field<Type> >&)’
   96 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:752:1: note: in expansion of macro ‘UNARY_OPERATOR’
  752 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:96:24: note:   template argument deduction/substitution failed:
   96 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:752:1: note: in expansion of macro ‘UNARY_OPERATOR’
  752 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:782:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const UList<T>&, const UList<Key>&)’
  782 | operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:782:1: note:   template argument deduction/substitution failed:
  782 | operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<Key>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:792:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const UList<T>&, const tmp<Field<Type2> >&)’
  792 | operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:792:1: note:   template argument deduction/substitution failed:
  792 | operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type2> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:803:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<Field<Type> >&, const UList<Key>&)’
  803 | operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:803:1: note:   template argument deduction/substitution failed:
  803 | operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:814:1: note: candidate: ‘template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<Field<Type> >&, const tmp<Field<Type2> >&)’
  814 | operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:814:1: note:   template argument deduction/substitution failed:
  814 | operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:839:1: note: candidate: ‘template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const UList<T>&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  839 | operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:839:1: note:   template argument deduction/substitution failed:
  839 | operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:849:1: note: candidate: ‘template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<Field<Type> >&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  849 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:849:1: note:   template argument deduction/substitution failed:
  849 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:877:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const UList<Type>&)’
  877 | operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:877:1: note:   template argument deduction/substitution failed:
  877 | operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:887:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<Field<Type> >&)’
  887 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:887:1: note:   template argument deduction/substitution failed:
  887 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:900:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  900 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:995:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const SphericalTensor<Cmpt>&, const Tensor<Cmpt>&)’
  995 | operator-(const SphericalTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:995:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SphericalTensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1009:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Tensor<Cmpt>&, const SphericalTensor<Cmpt>&)’
 1009 | operator-(const Tensor<Cmpt>& t1, const SphericalTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1009:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1023:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const SymmTensor<Cmpt>&, const Tensor<Cmpt>&)’
 1023 | operator-(const SymmTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1023:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SymmTensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1037:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Tensor<Cmpt>&, const SymmTensor<Cmpt>&)’
 1037 | operator-(const Tensor<Cmpt>& t1, const SymmTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/TensorI.H:1037:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:679:1: note: candidate: ‘template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator-(const SphericalTensor<Cmpt>&, const SymmTensor<Cmpt>&)’
  679 | operator-(const SphericalTensor<Cmpt>& spt1, const SymmTensor<Cmpt>& st2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:679:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SphericalTensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:693:1: note: candidate: ‘template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator-(const SymmTensor<Cmpt>&, const SphericalTensor<Cmpt>&)’
  693 | operator-(const SymmTensor<Cmpt>& st1, const SphericalTensor<Cmpt>& spt2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SymmTensorI.H:693:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::SymmTensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:760:6: note: candidate: ‘template<class Form, class Type> Form Foam::operator-(const Matrix<Form, Type>&)’
  760 | Form operator-(const Matrix<Form, Type>& mat)
      |      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:760:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Matrix<Form, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:812:7: note: candidate: ‘template<class Form1, class Form2, class Type> Form1 Foam::operator-(const Matrix<Form1, Type>&, const Matrix<Form2, Type>&)’
  812 | Form1 operator-
      |       ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:812:7: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Matrix<Form1, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:898:6: note: candidate: ‘template<class Form, class Type> Form Foam::operator-(const Type&, const Matrix<Form, Type>&)’
  898 | Form operator-(const Type& s, const Matrix<Form, Type>& mat)
      |      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:898:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::Matrix<Form, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:916:6: note: candidate: ‘template<class Form, class Type> Form Foam::operator-(const Matrix<Form, Type>&, const Type&)’
  916 | Form operator-(const Matrix<Form, Type>& mat, const Type& s)
      |      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:916:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Matrix<Form, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:836:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::operator-(const dimensioned<Type>&)’
  836 | Foam::dimensioned<Type> Foam::operator-(const dimensioned<Type>& dt)
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:836:25: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:848:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::operator-(const dimensioned<Type>&, const dimensioned<Type>&)’
  848 | Foam::dimensioned<Type> Foam::operator-
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:848:25: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:549:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const dimensioned<double>&, const DimensionedField<double, GeoMesh>&)’
  549 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:549:44: note:   template argument deduction/substitution failed:
  549 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:569:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const scalar&, const DimensionedField<double, GeoMesh>&)’
  569 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:569:44: note:   template argument deduction/substitution failed:
  569 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:580:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const dimensioned<double>&, const tmp<DimensionedField<double, GeoMesh> >&)’
  580 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:580:44: note:   template argument deduction/substitution failed:
  580 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:603:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const scalar&, const tmp<DimensionedField<double, GeoMesh> >&)’
  603 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:603:44: note:   template argument deduction/substitution failed:
  603 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:693:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  693 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:629:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const DimensionedField<double, GeoMesh>&, const dimensioned<double>&)’
  629 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:629:44: note:   template argument deduction/substitution failed:
  629 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const DimensionedField<double, GeoMesh>&, const scalar&)’
  649 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note:   template argument deduction/substitution failed:
  649 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:660:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const tmp<DimensionedField<double, GeoMesh> >&, const dimensioned<double>&)’
  660 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:660:44: note:   template argument deduction/substitution failed:
  660 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:683:44: note: candidate: ‘template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const tmp<DimensionedField<double, GeoMesh> >&, const scalar&)’
  683 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:683:44: note:   template argument deduction/substitution failed:
  683 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:694:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  694 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedScalarField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:105:44: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator-(const DimensionedField<Type, GeoMesh>&)’
  105 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:398:1: note: in expansion of macro ‘UNARY_OPERATOR’
  398 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:105:44: note:   template argument deduction/substitution failed:
  105 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:398:1: note: in expansion of macro ‘UNARY_OPERATOR’
  398 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:124:44: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator-(const tmp<DimensionedField<Type, GeoMesh> >&)’
  124 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:398:1: note: in expansion of macro ‘UNARY_OPERATOR’
  398 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:124:44: note:   template argument deduction/substitution failed:
  124 | tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
      |                                            ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:398:1: note: in expansion of macro ‘UNARY_OPERATOR’
  398 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:416:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const DimensionedField<TypeR, GeoMesh>&, const DimensionedField<Type1, GeoMesh>&)’
  416 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:416:1: note:   template argument deduction/substitution failed:
  416 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<TypeR, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:440:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const DimensionedField<TypeR, GeoMesh>&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  440 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:440:1: note:   template argument deduction/substitution failed:
  440 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<TypeR, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:467:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const tmp<DimensionedField<TypeR, GeoMesh> >&, const DimensionedField<Type1, GeoMesh>&)’
  467 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:467:1: note:   template argument deduction/substitution failed:
  467 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:494:1: note: candidate: ‘template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const tmp<DimensionedField<TypeR, GeoMesh> >&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  494 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:494:1: note:   template argument deduction/substitution failed:
  494 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:525:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator-(const DimensionedField<Type1, GeoMesh>&, const dimensioned<Type>&)’
  525 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:525:1: note:   template argument deduction/substitution failed:
  525 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type1, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:549:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const DimensionedField<Type2, GeoMesh>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  549 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:549:1: note:   template argument deduction/substitution failed:
  549 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type2, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:561:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator-(const tmp<DimensionedField<Type1, GeoMesh> >&, const dimensioned<Type>&)’
  561 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:561:1: note:   template argument deduction/substitution failed:
  561 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:588:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const tmp<DimensionedField<Type2, GeoMesh> >&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  588 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:588:1: note:   template argument deduction/substitution failed:
  588 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type2, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:600:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const dimensioned<Type>&, const DimensionedField<Type1, GeoMesh>&)’
  600 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:600:1: note:   template argument deduction/substitution failed:
  600 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:624:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const DimensionedField<Type2, GeoMesh>&)’
  624 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:624:1: note:   template argument deduction/substitution failed:
  624 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:636:1: note: candidate: ‘template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const dimensioned<Type>&, const tmp<DimensionedField<Type1, GeoMesh> >&)’
  636 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:636:1: note:   template argument deduction/substitution failed:
  636 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:663:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<DimensionedField<Type2, GeoMesh> >&)’
  663 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:663:1: note:   template argument deduction/substitution failed:
  663 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:674:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  674 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:388:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const scalar&, const FieldField<Field, double>&)’
  388 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:388:36: note:   template argument deduction/substitution failed:
  388 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::FieldField<Field, double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:400:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const scalar&, const tmp<FieldField<Field, double> >&)’
  400 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:400:36: note:   template argument deduction/substitution failed:
  400 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:458:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  458 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:432:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const FieldField<Field, double>&, const scalar&)’
  432 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:432:36: note:   template argument deduction/substitution failed:
  432 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, double>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:444:36: note: candidate: ‘template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const tmp<FieldField<Field, double> >&, const scalar&)’
  444 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:444:36: note:   template argument deduction/substitution failed:
  444 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:459:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  459 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   89 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:95:36: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator-(const FieldField<Field, Type>&)’
   95 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:645:1: note: in expansion of macro ‘UNARY_OPERATOR’
  645 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:95:36: note:   template argument deduction/substitution failed:
   95 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:645:1: note: in expansion of macro ‘UNARY_OPERATOR’
  645 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:106:36: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator-(const tmp<FieldField<Field, Type> >&)’
  106 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:645:1: note: in expansion of macro ‘UNARY_OPERATOR’
  645 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:106:36: note:   template argument deduction/substitution failed:
  106 | tmp<FieldField<Field, ReturnType>> operator Op                                 \
      |                                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:645:1: note: in expansion of macro ‘UNARY_OPERATOR’
  645 | UNARY_OPERATOR(Type, Type, -, negate)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:691:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const FieldField<Field, Type1>&, const FieldField<Field2, Type2>&)’
  691 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:691:1: note:   template argument deduction/substitution failed:
  691 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:705:1: note: candidate: ‘template<template<class> class Field, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const FieldField<Field, Type>&, const tmp<FieldField<Field, Type1> >&)’
  705 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:705:1: note:   template argument deduction/substitution failed:
  705 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:361:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const FieldField<Field, Type1>&, const tmp<FieldField<Field2, Type2> >&)’
  361 | operator op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:486:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  486 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:361:1: note:   template argument deduction/substitution failed:
  361 | operator op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:486:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  486 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:747:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<FieldField<Field, Type1> >&, const FieldField<Field2, Type2>&)’
  747 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:747:1: note:   template argument deduction/substitution failed:
  747 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type1> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:768:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<FieldField<Field, Type1> >&, const tmp<FieldField<Field2, Type2> >&)’
  768 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:768:1: note:   template argument deduction/substitution failed:
  768 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type1> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:818:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const FieldField<Field, Type>&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:818:1: note:   template argument deduction/substitution failed:
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:839:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const tmp<FieldField<Field, Type> >&, const VectorSpace<Form, Cmpt, nCmpt>&)’
  839 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:839:1: note:   template argument deduction/substitution failed:
  839 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:884:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const VectorSpace<Form, Cmpt, nCmpt>&, const FieldField<Field, Type>&)’
  884 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:884:1: note:   template argument deduction/substitution failed:
  884 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:905:1: note: candidate: ‘template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const VectorSpace<Form, Cmpt, nCmpt>&, const tmp<FieldField<Field, Type> >&)’
  905 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:905:1: note:   template argument deduction/substitution failed:
  905 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:726:1: note: candidate: ‘template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Foam::Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const FieldField<Field, Type1>&, const tmp<FieldField<Field2, Type2> >&)’
  726 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:726:1: note:   template argument deduction/substitution failed:
  726 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:919:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  919 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::FieldField<Field, Type1>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:224:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const DiagTensor<Cmpt>&, const Tensor<Cmpt>&)’
  224 | operator-(const DiagTensor<Cmpt>& dt1, const Tensor<Cmpt>& t2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:224:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DiagTensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:238:1: note: candidate: ‘template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Tensor<Cmpt>&, const DiagTensor<Cmpt>&)’
  238 | operator-(const Tensor<Cmpt>& t1, const DiagTensor<Cmpt>& dt2)
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DiagTensorI.H:238:1: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::Tensor<Cmpt>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:122:54: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator-(const GeometricField<Type, PatchField, GeoMesh>&)’
  122 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:596:1: note: in expansion of macro ‘UNARY_OPERATOR’
  596 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:122:54: note:   template argument deduction/substitution failed:
  122 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:596:1: note: in expansion of macro ‘UNARY_OPERATOR’
  596 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:141:54: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  141 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:596:1: note: in expansion of macro ‘UNARY_OPERATOR’
  596 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:141:54: note:   template argument deduction/substitution failed:
  141 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:596:1: note: in expansion of macro ‘UNARY_OPERATOR’
  596 | UNARY_OPERATOR(Type, Type, -, negate, transform)
      | ^~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:650:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const GeometricField<TypeR, PatchField, GeoMesh>&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  650 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:650:1: note:   template argument deduction/substitution failed:
  650 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<TypeR, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:678:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const GeometricField<TypeR, PatchField, GeoMesh>&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  678 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:678:1: note:   template argument deduction/substitution failed:
  678 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<TypeR, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:708:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<TypeR, PatchField, GeoMesh> >&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  708 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:708:1: note:   template argument deduction/substitution failed:
  708 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:738:1: note: candidate: ‘template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<TypeR, PatchField, GeoMesh> >&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  738 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:738:1: note:   template argument deduction/substitution failed:
  738 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:788:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator-(const GeometricField<Type1, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  788 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:788:1: note:   template argument deduction/substitution failed:
  788 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<Type1, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:818:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const GeometricField<Type2, PatchField, GeoMesh>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:818:1: note:   template argument deduction/substitution failed:
  818 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<Type2, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:831:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<Type1, PatchField, GeoMesh> >&, const dimensioned<Type>&)’
  831 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:831:1: note:   template argument deduction/substitution failed:
  831 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:864:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<Type2, PatchField, GeoMesh> >&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  864 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:864:1: note:   template argument deduction/substitution failed:
  864 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type2, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:896:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const dimensioned<Type>&, const GeometricField<Type1, PatchField, GeoMesh>&)’
  896 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:896:1: note:   template argument deduction/substitution failed:
  896 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:926:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const GeometricField<Type2, PatchField, GeoMesh>&)’
  926 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:926:1: note:   template argument deduction/substitution failed:
  926 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:938:1: note: candidate: ‘template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const dimensioned<Type>&, const tmp<GeometricField<Type1, PatchField, GeoMesh> >&)’
  938 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:938:1: note:   template argument deduction/substitution failed:
  938 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:971:1: note: candidate: ‘template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const VectorSpace<Form, Cmpt, Ncmpts>&, const tmp<GeometricField<Type2, PatchField, GeoMesh> >&)’
  971 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:971:1: note:   template argument deduction/substitution failed:
  971 | operator Op                                                                    \
      | ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:982:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
  982 | PRODUCT_OPERATOR(typeOfSum, -, subtract)
      | ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:617:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const dimensioned<double>&, const GeometricField<double, PatchField, GeoMesh>&)’
  617 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:617:54: note:   template argument deduction/substitution failed:
  617 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:637:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const scalar&, const GeometricField<double, PatchField, GeoMesh>&)’
  637 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:637:54: note:   template argument deduction/substitution failed:
  637 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:648:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const dimensioned<double>&, const tmp<GeometricField<double, PatchField, GeoMesh> >&)’
  648 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:648:54: note:   template argument deduction/substitution failed:
  648 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:671:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const scalar&, const tmp<GeometricField<double, PatchField, GeoMesh> >&)’
  671 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:671:54: note:   template argument deduction/substitution failed:
  671 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:768:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  768 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:703:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const GeometricField<double, PatchField, GeoMesh>&, const dimensioned<double>&)’
  703 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:703:54: note:   template argument deduction/substitution failed:
  703 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:723:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const GeometricField<double, PatchField, GeoMesh>&, const scalar&)’
  723 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:723:54: note:   template argument deduction/substitution failed:
  723 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:734:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<double, PatchField, GeoMesh> >&, const dimensioned<double>&)’
  734 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:734:54: note:   template argument deduction/substitution failed:
  734 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:54: note: candidate: ‘template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const tmp<GeometricField<double, PatchField, GeoMesh> >&, const scalar&)’
  757 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:54: note:   template argument deduction/substitution failed:
  757 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
      |                                                      ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:769:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  769 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricScalarField.C:104:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
  104 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:56:20: note: candidate: ‘template<class Type> const Type& Foam::operator-(const Type&, const zeroField&)’
   56 | inline const Type& operator-(const Type& t, const zeroField&)
      |                    ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:56:20: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   cannot convert ‘Foam::operator*(const dimensioned<double>&, const dimensioned<Type>&) [with Type = double](Foam::operator-(const dimensioned<Type>&, const dimensioned<Type>&) [with Type = double]((* & psiMin)))’ (type ‘Foam::dimensioned<double>’) to type ‘const Foam::zeroField&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:62:13: note: candidate: ‘template<class Type> Type Foam::operator-(const zeroField&, const Type&)’
   62 | inline Type operator-(const zeroField&, const Type& t)
      |             ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:62:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:19: note:   cannot convert ‘psiMinn’ (type ‘Foam::scalarField’ {aka ‘Foam::Field<double>’}) to type ‘const Foam::zeroField&’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ^~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2199:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&)’
 2199 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2199:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2210:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&)’
 2210 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2210:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2440:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const fvMatrix<Type>&)’
 2440 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2440:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2453:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const fvMatrix<Type>&)’
 2453 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2453:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2466:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const tmp<fvMatrix<Type> >&)’
 2466 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2466:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2480:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const tmp<fvMatrix<Type> >&)’
 2480 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2480:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2494:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const DimensionedField<Type, volMesh>&)’
 2494 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2494:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2507:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const tmp<DimensionedField<Type, volMesh> >&)’
 2507 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2507:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2521:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const tmp<GeometricField<Type, fvPatchField, volMesh> >&)’
 2521 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2521:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2535:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const DimensionedField<Type, volMesh>&)’
 2535 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2535:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2548:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const tmp<DimensionedField<Type, volMesh> >&)’
 2548 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2548:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2562:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const tmp<GeometricField<Type, fvPatchField, volMesh> >&)’
 2562 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2562:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2576:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const DimensionedField<Type, volMesh>&, const fvMatrix<Type>&)’
 2576 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2576:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type, Foam::volMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2590:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<DimensionedField<Type, volMesh> >&, const fvMatrix<Type>&)’
 2590 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2590:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2605:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<GeometricField<Type, fvPatchField, volMesh> >&, const fvMatrix<Type>&)’
 2605 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2605:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2620:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const DimensionedField<Type, volMesh>&, const tmp<fvMatrix<Type> >&)’
 2620 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2620:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::DimensionedField<Type, Foam::volMesh>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2634:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<DimensionedField<Type, volMesh> >&, const tmp<fvMatrix<Type> >&)’
 2634 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2634:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2649:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<GeometricField<Type, fvPatchField, volMesh> >&, const tmp<fvMatrix<Type> >&)’
 2649 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2649:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2716:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const fvMatrix<Type>&, const dimensioned<Type>&)’
 2716 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2716:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::fvMatrix<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2729:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const tmp<fvMatrix<Type> >&, const dimensioned<Type>&)’
 2729 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2729:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::tmp<Foam::fvMatrix<Type> >’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2742:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const dimensioned<Type>&, const fvMatrix<Type>&)’
 2742 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2742:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2756:33: note: candidate: ‘template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator-(const dimensioned<Type>&, const tmp<fvMatrix<Type> >&)’
 2756 | Foam::tmp<Foam::fvMatrix<Type>> Foam::operator-
      |                                 ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/fvMatrix.C:2756:33: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:387:27: note:   ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} is not derived from ‘const Foam::dimensioned<Type>’
  387 |     psiMinn = max(psiMinn - extremaCoeff*(psiMax - psiMin), psiMin);
      |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:56:23: note: candidate: ‘constexpr Foam::zero Foam::operator-(const zero&, const zero&)’
   56 | inline constexpr zero operator-(const zero&, const zero&) noexcept
      |                       ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:56:33: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::zero&’
   56 | inline constexpr zero operator-(const zero&, const zero&) noexcept
      |                                 ^~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:56:15: note: candidate: ‘Foam::scalar Foam::operator-(const scalar&, const one&)’
   56 | inline scalar operator-(const scalar& t, const one&) noexcept
      |               ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:56:39: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
   56 | inline scalar operator-(const scalar& t, const one&) noexcept
      |                         ~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:61:15: note: candidate: ‘Foam::scalar Foam::operator-(const one&, const scalar&)’
   61 | inline scalar operator-(const one&, const scalar& t) noexcept
      |               ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:61:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::one&’
   61 | inline scalar operator-(const one&, const scalar& t) noexcept
      |                         ^~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/bitSetI.H:715:21: note: candidate: ‘Foam::bitSet Foam::operator-(const bitSet&, const bitSet&)’
  715 | inline Foam::bitSet Foam::operator-(const bitSet& a, const bitSet& b)
      |                     ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/bitSetI.H:715:51: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::bitSet&’
  715 | inline Foam::bitSet Foam::operator-(const bitSet& a, const bitSet& b)
      |                                     ~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:278:16: note: candidate: ‘Foam::complex Foam::operator-(const complex&)’
  278 | inline complex operator-(const complex& c)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:278:16: note:   candidate expects 1 argument, 2 provided
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:306:16: note: candidate: ‘Foam::complex Foam::operator-(const complex&, const complex&)’
  306 | inline complex operator-(const complex& c1, const complex& c2)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:306:41: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::complex&’
  306 | inline complex operator-(const complex& c1, const complex& c2)
      |                          ~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:316:16: note: candidate: ‘Foam::complex Foam::operator-(const complex&, scalar)’
  316 | inline complex operator-(const complex& c, const scalar s)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:316:41: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::complex&’
  316 | inline complex operator-(const complex& c, const scalar s)
      |                          ~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:322:16: note: candidate: ‘Foam::complex Foam::operator-(scalar, const complex&)’
  322 | inline complex operator-(const scalar s, const complex& c)
      |                ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:322:39: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘Foam::scalar’ {aka ‘double’}
  322 | inline complex operator-(const scalar s, const complex& c)
      |                          ~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator-(const scalar&, const UList<double>&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator-(const scalar&, const tmp<Field<double> >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::scalar&’ {aka ‘const double&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator-(const UList<double>&, const scalar&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:257:18: note:   no known conversion for argument 2 from ‘Foam::dimensioned<double>’ to ‘const Foam::scalar&’ {aka ‘const double&’}
  257 |     const Type2& s2                                                            \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<double> > Foam::operator-(const tmp<Field<double> >&, const scalar&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:264:18: note:   no known conversion for argument 2 from ‘Foam::dimensioned<double>’ to ‘const Foam::scalar&’ {aka ‘const double&’}
  264 |     const Type2& s2                                                            \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/scalarField.H:92:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   92 | BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:418:14: note: candidate: ‘Foam::dimensionSet Foam::operator-(const dimensionSet&)’
  418 | dimensionSet operator-(const dimensionSet& ds);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:418:14: note:   candidate expects 1 argument, 2 provided
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:421:14: note: candidate: ‘Foam::dimensionSet Foam::operator-(const dimensionSet&, const dimensionSet&)’
  421 | dimensionSet operator-(const dimensionSet& ds1, const dimensionSet& ds2);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:421:44: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::dimensionSet&’
  421 | dimensionSet operator-(const dimensionSet& ds1, const dimensionSet& ds2);
      |                        ~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:55:19: note: candidate: ‘Foam::dimensionedScalar Foam::operator-(const dimensionedScalar&, scalar)’
   55 | dimensionedScalar operator-(const dimensionedScalar&, const scalar);
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:55:29: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::dimensionedScalar&’ {aka ‘const Foam::dimensioned<double>&’}
   55 | dimensionedScalar operator-(const dimensionedScalar&, const scalar);
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:56:19: note: candidate: ‘Foam::dimensionedScalar Foam::operator-(scalar, const dimensionedScalar&)’
   56 | dimensionedScalar operator-(const scalar, const dimensionedScalar&);
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedScalar.H:56:29: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘Foam::scalar’ {aka ‘double’}
   56 | dimensionedScalar operator-(const scalar, const dimensionedScalar&);
      |                             ^~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator-(const label&, const UList<int>&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::label&’ {aka ‘const int&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator-(const label&, const tmp<Field<int> >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::label&’ {aka ‘const int&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator-(const UList<int>&, const label&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:256:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<int>&’
  256 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<int> > Foam::operator-(const tmp<Field<int> >&, const label&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:263:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<int> >&’
  263 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/labelField.H:57:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   57 | BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:215:14: note: candidate: ‘Foam::orientedType Foam::operator-(const orientedType&)’
  215 | orientedType operator-(const orientedType& ot);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:215:14: note:   candidate expects 1 argument, 2 provided
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:220:14: note: candidate: ‘Foam::orientedType Foam::operator-(const orientedType&, const orientedType&)’
  220 | orientedType operator-(const orientedType& ot1, const orientedType& ot2);
      |              ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:220:44: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::orientedType&’
  220 | orientedType operator-(const orientedType& ot1, const orientedType& ot2);
      |                        ~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:274:36: note: candidate: ‘Foam::vectorTensorTransform Foam::operator-(const vectorTensorTransform&, const vector&)’
  274 | inline Foam::vectorTensorTransform Foam::operator-
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:276:34: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::vectorTensorTransform&’
  276 |     const vectorTensorTransform& tr,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:188:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const UList<DiagTensor<double> >&, const UList<Tensor<double> >&)’
  188 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:190:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  190 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:195:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const UList<DiagTensor<double> >&, const tmp<Field<Tensor<double> > >&)’
  195 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:197:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  197 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:202:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const tmp<Field<DiagTensor<double> > >&, const UList<Tensor<double> >&)’
  202 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:204:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  204 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:209:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const tmp<Field<DiagTensor<double> > >&, const tmp<Field<Tensor<double> > >&)’
  209 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:211:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  211 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
   63 | BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:229:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const diagTensor&, const UList<Tensor<double> >&)’
  229 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:231:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::diagTensor&’ {aka ‘const Foam::DiagTensor<double>&’}
  231 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:236:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const diagTensor&, const tmp<Field<Tensor<double> > >&)’
  236 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:238:18: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::diagTensor&’ {aka ‘const Foam::DiagTensor<double>&’}
  238 |     const Type1& s1,                                                           \
      |     ~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:269:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
  269 |     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:254:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const UList<DiagTensor<double> >&, const tensor&)’
  254 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:256:25: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::UList<Foam::DiagTensor<double> >&’
  256 |     const UList<Type1>& f1,                                                    \
      |     ~~~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:261:24: note: candidate: ‘Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const tmp<Field<DiagTensor<double> > >&, const tensor&)’
  261 | tmp<Field<ReturnType>> operator Op                                             \
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:263:30: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
  263 |     const tmp<Field<Type1>>& tf1,                                              \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.H:270:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
  270 |     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
   66 | BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:720:25: note: candidate: ‘Foam::quaternion Foam::operator-(const quaternion&)’
  720 | inline Foam::quaternion Foam::operator-(const quaternion& q)
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:720:25: note:   candidate expects 1 argument, 2 provided
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:726:25: note: candidate: ‘Foam::quaternion Foam::operator-(const quaternion&, const quaternion&)’
  726 | inline Foam::quaternion Foam::operator-
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/quaternionI.H:728:23: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::quaternion&’
  728 |     const quaternion& q1,
      |     ~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:208:25: note: candidate: ‘Foam::septernion Foam::operator-(const septernion&, const vector&)’
  208 | inline Foam::septernion Foam::operator-
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/septernionI.H:210:23: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::septernion&’
  210 |     const septernion& tr,
      |     ~~~~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:50:24: note: candidate: ‘const Foam::zeroField Foam::operator-(const zeroField&, const zeroField&)’
   50 | inline const zeroField operator-(const zeroField&, const zeroField&)
      |                        ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroFieldI.H:50:34: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::zeroField&’
   50 | inline const zeroField operator-(const zeroField&, const zeroField&)
      |                                  ^~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/clockValue.H:133:19: note: candidate: ‘Foam::clockValue Foam::operator-(const clockValue&, const clockValue&)’
  133 | inline clockValue operator-(const clockValue& a, const clockValue& b)
      |                   ^~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/clockValue.H:133:47: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::clockValue&’
  133 | inline clockValue operator-(const clockValue& a, const clockValue& b)
      |                             ~~~~~~~~~~~~~~~~~~^
VectorTensorOps.H:9:23: note: candidate: ‘Foam::Vector<double> Foam::operator-(const Vector<double>&, const Tensor<double>&)’
    9 | inline Vector<double> operator-(const Vector<double>& v, const Tensor<double>& t)
      |                       ^~~~~~~~
VectorTensorOps.H:9:55: note:   no known conversion for argument 1 from ‘Foam::scalarField’ {aka ‘Foam::Field<double>’} to ‘const Foam::Vector<double>&’
    9 | inline Vector<double> operator-(const Vector<double>& v, const Tensor<double>& t)
      |                                 ~~~~~~~~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: error: no matching function for call to ‘min(Foam::tmp<Foam::Field<double> >, const Foam::dimensioned<double>&)’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:105:13: note: candidate: ‘template<class Type> Type Foam::min(const zero&, const Type&)’
  105 | inline Type min(const zero&, const Type& t)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:105:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘Foam::operator+(const tmp<Field<Type> >&, const tmp<Field<Type2> >&) [with Type1 = double; Type2 = double; typename typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const UList<T>&) [with Type = double; scalar = double](psiMaxn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:111:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const zero&)’
  111 | inline Type min(const Type& t, const zero&)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:111:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘psiMax’ (type ‘const Foam::dimensioned<double>’) to type ‘const Foam::zero&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:112:13: note: candidate: ‘template<class Type> Type Foam::min(const one&, const Type&)’
  112 | inline Type min(const one&, const Type& t) noexcept
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:112:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘Foam::operator+(const tmp<Field<Type> >&, const tmp<Field<Type2> >&) [with Type1 = double; Type2 = double; typename typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const UList<T>&) [with Type = double; scalar = double](psiMaxn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:118:13: note: candidate: ‘template<class Type> Type Foam::min(const Type&, const one&)’
  118 | inline Type min(const Type& t, const one&) noexcept
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:118:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   cannot convert ‘psiMax’ (type ‘const Foam::dimensioned<double>’) to type ‘const Foam::one&’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:661:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::min(const VectorSpace<Form, Cmpt, Ncmpts>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  661 | inline Form min
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:661:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:388:6: note: candidate: ‘template<class Type> Type Foam::min(const UList<T>&)’
  388 | Type min(const UList<Type>& f1)
      |      ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:388:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:400:26: note: candidate: ‘template<class Type> Type Foam::min(const tmp<Field<Type> >&)’
  400 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:365:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  365 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:400:26: note:   template argument deduction/substitution failed:
  400 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:365:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  365 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   candidate expects 1 argument, 2 provided
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note: candidate: ‘template<class Type> void Foam::min(Field<Type>&, const UList<T>&, const UList<T>&)’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:113:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM’
  113 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note:   template argument deduction/substitution failed:
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:113:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM’
  113 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const UList<T>&, const UList<T>&)’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:129:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  129 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note:   template argument deduction/substitution failed:
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:129:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  129 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const UList<T>&, const tmp<Field<Type> >&)’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:141:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  141 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note:   template argument deduction/substitution failed:
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:141:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  141 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const tmp<Field<Type> >&, const UList<T>&)’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:154:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  154 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note:   template argument deduction/substitution failed:
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:154:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  154 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const tmp<Field<Type> >&, const tmp<Field<Type> >&)’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:167:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  167 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:35: note:   template argument deduction/substitution failed:
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:167:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  167 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:733:1: note: in expansion of macro ‘BINARY_FUNCTION’
  733 | BINARY_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> void Foam::min(Field<Type>&, const Type&, const UList<T>&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_SF’
  190 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_SF’
  190 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const UList<T>&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  206 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  206 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const Type&, const tmp<Field<Type> >&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:218:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  218 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:218:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  218 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> void Foam::min(Field<Type>&, const UList<T>&, const Type&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:238:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_FS’
  238 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:238:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_FS’
  238 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const UList<T>&, const Type&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:254:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  254 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:254:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  254 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::min(const tmp<Field<Type> >&, const Type&)’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:266:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  266 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:40: note:   template argument deduction/substitution failed:
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:266:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  266 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:738:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  738 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘Foam::dimensioned<double>’)
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:728:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::min(const Matrix<Form, Type>&)’
  728 | const Type& min(const Matrix<Form, Type>& mat)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:728:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:734:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::min(const dimensioned<Type>&, const dimensioned<Type>&)’
  734 | Foam::dimensioned<Type> Foam::min
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:734:25: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const DimensionedField<Type, GeoMesh>&)’
  301 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:276:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  276 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:32: note:   template argument deduction/substitution failed:
  301 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:276:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  276 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::min(const tmp<DimensionedField<Type, GeoMesh> >&)’
  301 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:290:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  290 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:301:32: note:   template argument deduction/substitution failed:
  301 | UNARY_REDUCTION_FUNCTION(Type, min, gMin)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:290:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  290 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note: candidate: ‘template<class Type, class GeoMesh> void Foam::min(DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&)’
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:150:6: note: in definition of macro ‘BINARY_FUNCTION’
  150 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note:   template argument deduction/substitution failed:
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:150:6: note: in definition of macro ‘BINARY_FUNCTION’
  150 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&)’
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:163:44: note: in definition of macro ‘BINARY_FUNCTION’
  163 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note:   template argument deduction/substitution failed:
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:163:44: note: in definition of macro ‘BINARY_FUNCTION’
  163 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const DimensionedField<Type, GeoMesh>&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:183:44: note: in definition of macro ‘BINARY_FUNCTION’
  183 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note:   template argument deduction/substitution failed:
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:183:44: note: in definition of macro ‘BINARY_FUNCTION’
  183 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const tmp<DimensionedField<Type, GeoMesh> >&, const DimensionedField<Type, GeoMesh>&)’
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:206:44: note: in definition of macro ‘BINARY_FUNCTION’
  206 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note:   template argument deduction/substitution failed:
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:206:44: note: in definition of macro ‘BINARY_FUNCTION’
  206 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const tmp<DimensionedField<Type, GeoMesh> >&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:229:44: note: in definition of macro ‘BINARY_FUNCTION’
  229 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:313:35: note:   template argument deduction/substitution failed:
  313 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:229:44: note: in definition of macro ‘BINARY_FUNCTION’
  229 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> void Foam::min(DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&, const DimensionedField<Type, GeoMesh>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:260:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  260 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:260:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  260 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const dimensioned<Type>&, const DimensionedField<Type, GeoMesh>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:273:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  273 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:273:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  273 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const DimensionedField<Type, GeoMesh>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:293:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  293 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:293:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  293 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const dimensioned<Type>&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:304:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  304 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:304:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  304 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const Type&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:326:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:326:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> void Foam::min(DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:339:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  339 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:339:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  339 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:352:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  352 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:352:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  352 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const DimensionedField<Type, GeoMesh>&, const Type&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:372:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  372 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:372:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  372 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const tmp<DimensionedField<Type, GeoMesh> >&, const dimensioned<Type>&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:383:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  383 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:383:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  383 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::min(const tmp<DimensionedField<Type, GeoMesh> >&, const Type&)’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:406:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  406 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:40: note:   template argument deduction/substitution failed:
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:406:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  406 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:318:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  318 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:449:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const FieldField<Field, Type>&)’
  449 | Type min(const FieldField<Field, Type>& f)
      |      ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:449:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::min(const tmp<FieldField<Field, Type> >&)’
  466 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:419:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  419 | ReturnType Func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:466:26: note:   template argument deduction/substitution failed:
  466 | TMP_UNARY_FUNCTION(Type, min)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:419:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  419 | ReturnType Func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(FieldField<Field, Type>&, const FieldField<Field, Type>&, const FieldField<Field, Type>&)’
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:123:6: note: in definition of macro ‘BINARY_FUNCTION’
  123 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note:   template argument deduction/substitution failed:
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:123:6: note: in definition of macro ‘BINARY_FUNCTION’
  123 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const FieldField<Field, Type>&, const FieldField<Field, Type>&)’
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:139:36: note: in definition of macro ‘BINARY_FUNCTION’
  139 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note:   template argument deduction/substitution failed:
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:139:36: note: in definition of macro ‘BINARY_FUNCTION’
  139 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const FieldField<Field, Type>&, const tmp<FieldField<Field, Type> >&)’
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:151:36: note: in definition of macro ‘BINARY_FUNCTION’
  151 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note:   template argument deduction/substitution failed:
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:151:36: note: in definition of macro ‘BINARY_FUNCTION’
  151 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const tmp<FieldField<Field, Type> >&, const FieldField<Field, Type>&)’
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:164:36: note: in definition of macro ‘BINARY_FUNCTION’
  164 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note:   template argument deduction/substitution failed:
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:164:36: note: in definition of macro ‘BINARY_FUNCTION’
  164 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const tmp<FieldField<Field, Type> >&, const tmp<FieldField<Field, Type> >&)’
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:177:36: note: in definition of macro ‘BINARY_FUNCTION’
  177 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:624:35: note:   template argument deduction/substitution failed:
  624 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:177:36: note: in definition of macro ‘BINARY_FUNCTION’
  177 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(FieldField<Field, Type>&, const Type&, const FieldField<Field, Type>&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:200:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  200 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:200:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  200 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const FieldField<Field, Type>&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:216:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  216 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:216:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  216 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const Type&, const tmp<FieldField<Field, Type> >&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:228:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  228 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:228:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  228 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::min(FieldField<Field, Type>&, const FieldField<Field, Type>&, const Type&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:244:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  244 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:244:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  244 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const FieldField<Field, Type>&, const Type&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:260:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  260 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:260:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  260 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::min(const tmp<FieldField<Field, Type> >&, const Type&)’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:272:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  272 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:40: note:   template argument deduction/substitution failed:
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:272:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  272 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:629:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  629 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:463:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const GeometricField<Type, PatchField, GeoMesh>&)’
  463 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:430:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  430 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:463:46: note:   template argument deduction/substitution failed:
  463 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:430:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  430 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:463:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::min(const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  463 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:452:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  452 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:463:46: note:   template argument deduction/substitution failed:
  463 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, min, minOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:452:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  452 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:167:6: note: in definition of macro ‘BINARY_FUNCTION’
  167 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note:   template argument deduction/substitution failed:
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:167:6: note: in definition of macro ‘BINARY_FUNCTION’
  167 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:196:54: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note:   template argument deduction/substitution failed:
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:196:54: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const GeometricField<Type, PatchField, GeoMesh>&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:216:54: note: in definition of macro ‘BINARY_FUNCTION’
  216 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note:   template argument deduction/substitution failed:
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:216:54: note: in definition of macro ‘BINARY_FUNCTION’
  216 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const GeometricField<Type, PatchField, GeoMesh>&)’
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:239:54: note: in definition of macro ‘BINARY_FUNCTION’
  239 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note:   template argument deduction/substitution failed:
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:239:54: note: in definition of macro ‘BINARY_FUNCTION’
  239 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:262:54: note: in definition of macro ‘BINARY_FUNCTION’
  262 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:505:35: note:   template argument deduction/substitution failed:
  505 | BINARY_FUNCTION(Type, Type, Type, min)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:262:54: note: in definition of macro ‘BINARY_FUNCTION’
  262 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:294:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:294:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const dimensioned<Type>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:313:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  313 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:313:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  313 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const GeometricField<Type, PatchField, GeoMesh>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:333:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  333 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:333:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  333 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const dimensioned<Type>&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:344:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  344 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:344:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  344 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const Type&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:367:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  367 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:367:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  367 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::min(GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:380:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  380 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:380:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  380 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:399:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  399 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:399:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  399 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:419:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  419 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:419:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  419 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const dimensioned<Type>&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:430:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  430 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:430:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  430 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::min(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:453:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  453 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:40: note:   template argument deduction/substitution failed:
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:453:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  453 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:510:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  510 | BINARY_TYPE_FUNCTION(Type, Type, Type, min)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::min(const UniformField<Type>&, const UniformField<Type>&)’
   39 | inline UniformField<Type> min
      |                           ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:39:27: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const UniformField<Type>&, const OtherType&)’
   50 | inline OtherType min(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:50:18: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::min(const OtherType&, const UniformField<Type>&)’
   57 | inline OtherType min(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:57:18: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:392:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UniformField<Type>’
  392 |             min(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMaxn, psiMax);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int8_t Foam::min(int8_t, int8_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int16_t Foam::min(int16_t, int16_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int32_t Foam::min(int32_t, int32_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int64_t Foam::min(int64_t, int32_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int64_t Foam::min(int32_t, int64_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘int64_t Foam::min(int64_t, int64_t)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(double, double)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:55:1: note: in expansion of macro ‘MAXMINPOW’
   55 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:55:1: note: in expansion of macro ‘MAXMINPOW’
   55 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(double, float)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:56:1: note: in expansion of macro ‘MAXMINPOW’
   56 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:56:1: note: in expansion of macro ‘MAXMINPOW’
   56 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(float, double)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:57:1: note: in expansion of macro ‘MAXMINPOW’
   57 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:57:1: note: in expansion of macro ‘MAXMINPOW’
   57 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(double, int)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:58:1: note: in expansion of macro ‘MAXMINPOW’
   58 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:58:1: note: in expansion of macro ‘MAXMINPOW’
   58 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(int, double)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:59:1: note: in expansion of macro ‘MAXMINPOW’
   59 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:59:1: note: in expansion of macro ‘MAXMINPOW’
   59 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(double, long int)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:60:1: note: in expansion of macro ‘MAXMINPOW’
   60 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:60:1: note: in expansion of macro ‘MAXMINPOW’
   60 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘double Foam::min(long int, double)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:61:1: note: in expansion of macro ‘MAXMINPOW’
   61 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:61:1: note: in expansion of macro ‘MAXMINPOW’
   61 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘float Foam::min(float, float)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:62:1: note: in expansion of macro ‘MAXMINPOW’
   62 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:62:1: note: in expansion of macro ‘MAXMINPOW’
   62 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘float Foam::min(float, int)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘float Foam::min(int, float)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘float Foam::min(float, long int)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:16: note: candidate: ‘float Foam::min(long int, float)’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:53:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   53 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint8_t Foam::min(uint8_t, uint8_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint16_t Foam::min(uint16_t, uint16_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint32_t Foam::min(uint32_t, uint32_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint32_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint32_t, uint64_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:16: note: candidate: ‘uint64_t Foam::min(uint64_t, uint64_t)’
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:54:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   54 | inline RetType min(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:99:13: note: candidate: ‘Foam::zero Foam::min(const zero&, const zero&)’
   99 | inline zero min(const zero&, const zero&)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:99:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
   99 | inline zero min(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:106:29: note: candidate: ‘constexpr const Foam::one& Foam::min(const one&, const one&)’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:106:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  106 | inline constexpr const one& min(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.H:433:7: note: candidate: ‘Foam::label Foam::min(const labelHashSet&, label)’
  433 | label min(const labelHashSet& set, label minValue = labelMax);
      |       ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.H:433:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  433 | label min(const labelHashSet& set, label minValue = labelMax);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:226:23: note: candidate: ‘const Foam::complex& Foam::min(const complex&, const complex&)’
  226 | inline const complex& min(const complex& c1, const complex& c2)
      |                       ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:226:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  226 | inline const complex& min(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:357:14: note: candidate: ‘Foam::dimensionSet Foam::min(const dimensionSet&, const dimensionSet&)’
  357 | dimensionSet min(const dimensionSet& a, const dimensionSet& b);
      |              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:357:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  357 | dimensionSet min(const dimensionSet& a, const dimensionSet& b);
      |                  ~~~~~~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:175:14: note: candidate: ‘Foam::orientedType Foam::min(const orientedType&, const orientedType&)’
  175 | orientedType min(const orientedType& a, const orientedType& b);
      |              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:175:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  175 | orientedType min(const orientedType& a, const orientedType& b);
      |                  ~~~~~~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: error: no matching function for call to ‘max(Foam::tmp<Foam::Field<double> >, const Foam::dimensioned<double>&)’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:122:13: note: candidate: ‘template<class Type> Type Foam::max(const zero&, const Type&)’
  122 | inline Type max(const zero&, const Type& t)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:122:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘Foam::operator+(const tmp<Field<Type> >&, const tmp<Field<Type2> >&) [with Type1 = double; Type2 = double; typename typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const UList<T>&) [with Type = double; scalar = double](psiMinn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::zero&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:128:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const zero&)’
  128 | inline Type max(const Type& t, const zero&)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:128:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘psiMin’ (type ‘const Foam::dimensioned<double>’) to type ‘const Foam::zero&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:129:13: note: candidate: ‘template<class Type> Type Foam::max(const one&, const Type&)’
  129 | inline Type max(const one&, const Type& t) noexcept
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:129:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘Foam::operator+(const tmp<Field<Type> >&, const tmp<Field<Type2> >&) [with Type1 = double; Type2 = double; typename typeOfSum<Type1, Type2>::type = double](Foam::operator*(const scalar&, const UList<T>&) [with Type = double; scalar = double](psiMinn.Foam::Field<double>::<anonymous>.Foam::List<double>::<anonymous>))’ (type ‘Foam::tmp<Foam::Field<double> >’) to type ‘const Foam::one&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:135:13: note: candidate: ‘template<class Type> Type Foam::max(const Type&, const one&)’
  135 | inline Type max(const Type& t, const one&) noexcept
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:135:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   cannot convert ‘psiMin’ (type ‘const Foam::dimensioned<double>’) to type ‘const Foam::one&’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:648:13: note: candidate: ‘template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::max(const VectorSpace<Form, Cmpt, Ncmpts>&, const VectorSpace<Form, Cmpt, Ncmpts>&)’
  648 | inline Form max
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/VectorSpaceI.H:648:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:373:6: note: candidate: ‘template<class Type> Type Foam::max(const UList<T>&)’
  373 | Type max(const UList<Type>& f1)
      |      ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:373:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:385:26: note: candidate: ‘template<class Type> Type Foam::max(const tmp<Field<Type> >&)’
  385 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:365:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  365 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:385:26: note:   template argument deduction/substitution failed:
  385 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:365:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  365 | ReturnType Func(const tmp<Field<Type>>& tf1)                                   \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   candidate expects 1 argument, 2 provided
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: ‘template<class Type> void Foam::max(Field<Type>&, const UList<T>&, const UList<T>&)’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:113:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM’
  113 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:113:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM’
  113 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const UList<T>&, const UList<T>&)’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:129:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  129 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:129:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  129 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const UList<T>&, const tmp<Field<Type> >&)’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:141:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  141 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:141:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  141 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const tmp<Field<Type> >&, const UList<T>&)’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:154:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  154 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:154:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  154 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const tmp<Field<Type> >&, const tmp<Field<Type> >&)’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:167:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  167 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:35: note:   template argument deduction/substitution failed:
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:167:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE’
  167 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:732:1: note: in expansion of macro ‘BINARY_FUNCTION’
  732 | BINARY_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> void Foam::max(Field<Type>&, const Type&, const UList<T>&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_SF’
  190 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:190:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_SF’
  190 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const UList<T>&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  206 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:206:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  206 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const Type&, const tmp<Field<Type> >&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:218:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  218 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:218:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_SF’
  218 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:284:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_SF’
  284 |     BINARY_TYPE_FUNCTION_SF(ReturnType, Type1, Type2, Func)                    \
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> void Foam::max(Field<Type>&, const UList<T>&, const Type&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:238:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_FS’
  238 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:238:6: note: in definition of macro ‘BINARY_FUNCTION_TRANSFORM_FS’
  238 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::Field<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const UList<T>&, const Type&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:254:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  254 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:254:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  254 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UList<T>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note: candidate: ‘template<class Type> Foam::tmp<Foam::Field<Type> > Foam::max(const tmp<Field<Type> >&, const Type&)’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:266:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  266 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:40: note:   template argument deduction/substitution failed:
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:266:24: note: in definition of macro ‘BINARY_FUNCTION_INTERFACE_FS’
  266 | tmp<Field<ReturnType>> Func                                                    \
      |                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctionsM.C:285:5: note: in expansion of macro ‘BINARY_TYPE_FUNCTION_FS’
  285 |     BINARY_TYPE_FUNCTION_FS(ReturnType, Type1, Type2, Func)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFunctions.C:737:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  737 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   deduced conflicting types for parameter ‘const Type’ (‘double’ and ‘Foam::dimensioned<double>’)
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:714:13: note: candidate: ‘template<class Form, class Type> const Type& Foam::max(const Matrix<Form, Type>&)’
  714 | const Type& max(const Matrix<Form, Type>& mat)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/Matrix.C:714:13: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::Matrix<Form, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:718:25: note: candidate: ‘template<class Type> Foam::dimensioned<Type> Foam::max(const dimensioned<Type>&, const dimensioned<Type>&)’
  718 | Foam::dimensioned<Type> Foam::max
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionedType.C:718:25: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SolverPerformance.C:175:40: note: candidate: ‘template<class Type> Foam::SolverPerformance<Type> Foam::max(const SolverPerformance<Type>&, const SolverPerformance<Type>&)’
  175 | typename Foam::SolverPerformance<Type> Foam::max
      |                                        ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/SolverPerformance.C:175:40: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::SolverPerformance<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const DimensionedField<Type, GeoMesh>&)’
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:276:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  276 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note:   template argument deduction/substitution failed:
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:276:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  276 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note: candidate: ‘template<class Type, class GeoMesh> Foam::dimensioned<Type> Foam::max(const tmp<DimensionedField<Type, GeoMesh> >&)’
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:290:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  290 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:300:32: note:   template argument deduction/substitution failed:
  300 | UNARY_REDUCTION_FUNCTION(Type, max, gMax)
      |                                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:290:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION’
  290 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: ‘template<class Type, class GeoMesh> void Foam::max(DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&)’
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:150:6: note: in definition of macro ‘BINARY_FUNCTION’
  150 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:150:6: note: in definition of macro ‘BINARY_FUNCTION’
  150 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&)’
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:163:44: note: in definition of macro ‘BINARY_FUNCTION’
  163 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:163:44: note: in definition of macro ‘BINARY_FUNCTION’
  163 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const DimensionedField<Type, GeoMesh>&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:183:44: note: in definition of macro ‘BINARY_FUNCTION’
  183 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:183:44: note: in definition of macro ‘BINARY_FUNCTION’
  183 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const tmp<DimensionedField<Type, GeoMesh> >&, const DimensionedField<Type, GeoMesh>&)’
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:206:44: note: in definition of macro ‘BINARY_FUNCTION’
  206 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:206:44: note: in definition of macro ‘BINARY_FUNCTION’
  206 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const tmp<DimensionedField<Type, GeoMesh> >&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:229:44: note: in definition of macro ‘BINARY_FUNCTION’
  229 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:312:35: note:   template argument deduction/substitution failed:
  312 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:229:44: note: in definition of macro ‘BINARY_FUNCTION’
  229 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> void Foam::max(DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&, const DimensionedField<Type, GeoMesh>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:260:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  260 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:260:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  260 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const dimensioned<Type>&, const DimensionedField<Type, GeoMesh>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:273:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  273 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:273:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  273 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const DimensionedField<Type, GeoMesh>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:293:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  293 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:293:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  293 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const dimensioned<Type>&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:304:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  304 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:304:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  304 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const Type&, const tmp<DimensionedField<Type, GeoMesh> >&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:326:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:326:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  326 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> void Foam::max(DimensionedField<Type, GeoMesh>&, const DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:339:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  339 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:339:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  339 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const DimensionedField<Type, GeoMesh>&, const dimensioned<Type>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:352:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  352 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:352:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  352 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const DimensionedField<Type, GeoMesh>&, const Type&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:372:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  372 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:372:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  372 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const tmp<DimensionedField<Type, GeoMesh> >&, const dimensioned<Type>&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:383:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  383 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:383:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  383 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note: candidate: ‘template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::max(const tmp<DimensionedField<Type, GeoMesh> >&, const Type&)’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:406:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  406 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:40: note:   template argument deduction/substitution failed:
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:406:44: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  406 | tmp<DimensionedField<ReturnType, GeoMesh>> Func                                \
      |                                            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:317:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  317 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:427:6: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const FieldField<Field, Type>&)’
  427 | Type max(const FieldField<Field, Type>& f)
      |      ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:427:6: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:445:26: note: candidate: ‘template<template<class> class Field, class Type> Type Foam::max(const tmp<FieldField<Field, Type> >&)’
  445 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:419:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  419 | ReturnType Func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:445:26: note:   template argument deduction/substitution failed:
  445 | TMP_UNARY_FUNCTION(Type, max)
      |                          ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:419:12: note: in definition of macro ‘TMP_UNARY_FUNCTION’
  419 | ReturnType Func(const tmp<FieldField<Field, Type>>& tf1)                       \
      |            ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(FieldField<Field, Type>&, const FieldField<Field, Type>&, const FieldField<Field, Type>&)’
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:123:6: note: in definition of macro ‘BINARY_FUNCTION’
  123 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:123:6: note: in definition of macro ‘BINARY_FUNCTION’
  123 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const FieldField<Field, Type>&, const FieldField<Field, Type>&)’
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:139:36: note: in definition of macro ‘BINARY_FUNCTION’
  139 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:139:36: note: in definition of macro ‘BINARY_FUNCTION’
  139 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const FieldField<Field, Type>&, const tmp<FieldField<Field, Type> >&)’
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:151:36: note: in definition of macro ‘BINARY_FUNCTION’
  151 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:151:36: note: in definition of macro ‘BINARY_FUNCTION’
  151 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const tmp<FieldField<Field, Type> >&, const FieldField<Field, Type>&)’
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:164:36: note: in definition of macro ‘BINARY_FUNCTION’
  164 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:164:36: note: in definition of macro ‘BINARY_FUNCTION’
  164 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const tmp<FieldField<Field, Type> >&, const tmp<FieldField<Field, Type> >&)’
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:177:36: note: in definition of macro ‘BINARY_FUNCTION’
  177 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:623:35: note:   template argument deduction/substitution failed:
  623 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:177:36: note: in definition of macro ‘BINARY_FUNCTION’
  177 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(FieldField<Field, Type>&, const Type&, const FieldField<Field, Type>&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:200:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  200 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:200:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  200 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const FieldField<Field, Type>&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:216:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  216 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:216:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  216 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const Type&, const tmp<FieldField<Field, Type> >&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:228:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  228 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:228:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  228 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> void Foam::max(FieldField<Field, Type>&, const FieldField<Field, Type>&, const Type&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:244:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  244 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:244:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  244 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const FieldField<Field, Type>&, const Type&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:260:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  260 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:260:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  260 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::FieldField<Field, Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note: candidate: ‘template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::max(const tmp<FieldField<Field, Type> >&, const Type&)’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:272:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  272 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:40: note:   template argument deduction/substitution failed:
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:272:36: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  272 | tmp<FieldField<Field, ReturnType>> Func                                        \
      |                                    ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:628:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  628 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::FieldField<Field, Type>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const GeometricField<Type, PatchField, GeoMesh>&)’
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:430:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  430 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note:   template argument deduction/substitution failed:
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:430:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  430 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::dimensioned<Type> Foam::max(const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:452:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  452 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:462:46: note:   template argument deduction/substitution failed:
  462 | UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY(Type, max, maxOp)
      |                                              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:452:25: note: in definition of macro ‘UNARY_REDUCTION_FUNCTION_WITH_BOUNDARY’
  452 | dimensioned<ReturnType> Func                                                   \
      |                         ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:167:6: note: in definition of macro ‘BINARY_FUNCTION’
  167 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:167:6: note: in definition of macro ‘BINARY_FUNCTION’
  167 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:196:54: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:196:54: note: in definition of macro ‘BINARY_FUNCTION’
  196 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const GeometricField<Type, PatchField, GeoMesh>&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:216:54: note: in definition of macro ‘BINARY_FUNCTION’
  216 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:216:54: note: in definition of macro ‘BINARY_FUNCTION’
  216 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const GeometricField<Type, PatchField, GeoMesh>&)’
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:239:54: note: in definition of macro ‘BINARY_FUNCTION’
  239 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:239:54: note: in definition of macro ‘BINARY_FUNCTION’
  239 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:262:54: note: in definition of macro ‘BINARY_FUNCTION’
  262 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:504:35: note:   template argument deduction/substitution failed:
  504 | BINARY_FUNCTION(Type, Type, Type, max)
      |                                   ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:262:54: note: in definition of macro ‘BINARY_FUNCTION’
  262 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:294:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:294:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  294 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const dimensioned<Type>&, const GeometricField<Type, PatchField, GeoMesh>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:313:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  313 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:313:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  313 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const GeometricField<Type, PatchField, GeoMesh>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:333:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  333 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:333:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  333 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const dimensioned<Type>&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:344:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  344 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:344:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  344 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::dimensioned<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const Type&, const tmp<GeometricField<Type, PatchField, GeoMesh> >&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:367:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  367 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:367:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_SF’
  367 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> void Foam::max(GeometricField<Type, PatchField, GeoMesh>&, const GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:380:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  380 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:380:6: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  380 | void Func                                                                      \
      |      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const GeometricField<Type, PatchField, GeoMesh>&, const dimensioned<Type>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:399:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  399 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:399:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  399 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const GeometricField<Type, PatchField, GeoMesh>&, const Type&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:419:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  419 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:419:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  419 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const dimensioned<Type>&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:430:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  430 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:430:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  430 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note: candidate: ‘template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::max(const tmp<GeometricField<Type, PatchField, GeoMesh> >&, const Type&)’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:453:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  453 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:40: note:   template argument deduction/substitution failed:
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      |                                        ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:453:54: note: in definition of macro ‘BINARY_TYPE_FUNCTION_FS’
  453 | tmp<GeometricField<ReturnType, PatchField, GeoMesh>> Func                      \
      |                                                      ^~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:509:1: note: in expansion of macro ‘BINARY_TYPE_FUNCTION’
  509 | BINARY_TYPE_FUNCTION(Type, Type, Type, max)
      | ^~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   mismatched types ‘Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::Field<double>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note: candidate: ‘template<class Type> Foam::UniformField<Type> Foam::max(const UniformField<Type>&, const UniformField<Type>&)’
   64 | inline UniformField<Type> max
      |                           ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:64:27: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const UniformField<Type>&, const OtherType&)’
   75 | inline OtherType max(const UniformField<Type>& u, const OtherType& o)
      |                  ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:75:18: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘Foam::tmp<Foam::Field<double> >’ is not derived from ‘const Foam::UniformField<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note: candidate: ‘template<class Type, class OtherType> OtherType Foam::max(const OtherType&, const UniformField<Type>&)’
   82 | inline OtherType max(const OtherType& o, const UniformField<Type>& u)
      |                  ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/UniformFieldI.H:82:18: note:   template argument deduction/substitution failed:
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/finiteVolume/lnInclude/MULESTemplates.C:394:16: note:   ‘const Foam::dimensioned<double>’ is not derived from ‘const Foam::UniformField<Type>’
  394 |             max(smoothLimiter*psiIf + (1.0 - smoothLimiter)*psiMinn, psiMin);
      |             ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int8_t Foam::max(int8_t, int8_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int8_t’ {aka ‘signed char’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(int8_t, int8_t, int8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int16_t Foam::max(int16_t, int16_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int16_t’ {aka ‘short int’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(int16_t, int16_t, int16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int32_t Foam::max(int32_t, int32_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(int32_t, int32_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int64_t Foam::max(int64_t, int32_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(int64_t, int64_t, int32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int64_t Foam::max(int32_t, int64_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int32_t’ {aka ‘int’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(int64_t, int32_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘int64_t Foam::max(int64_t, int64_t)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int64_t’ {aka ‘long int’}
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(int64_t, int64_t, int64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(double, double)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:55:1: note: in expansion of macro ‘MAXMINPOW’
   55 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:55:1: note: in expansion of macro ‘MAXMINPOW’
   55 | MAXMINPOW(double, double, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(double, float)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:56:1: note: in expansion of macro ‘MAXMINPOW’
   56 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:56:1: note: in expansion of macro ‘MAXMINPOW’
   56 | MAXMINPOW(double, double, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(float, double)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:57:1: note: in expansion of macro ‘MAXMINPOW’
   57 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:57:1: note: in expansion of macro ‘MAXMINPOW’
   57 | MAXMINPOW(double, float, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(double, int)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:58:1: note: in expansion of macro ‘MAXMINPOW’
   58 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:58:1: note: in expansion of macro ‘MAXMINPOW’
   58 | MAXMINPOW(double, double, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(int, double)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:59:1: note: in expansion of macro ‘MAXMINPOW’
   59 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:59:1: note: in expansion of macro ‘MAXMINPOW’
   59 | MAXMINPOW(double, int, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(double, long int)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:60:1: note: in expansion of macro ‘MAXMINPOW’
   60 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘double’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:60:1: note: in expansion of macro ‘MAXMINPOW’
   60 | MAXMINPOW(double, double, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘double Foam::max(long int, double)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:61:1: note: in expansion of macro ‘MAXMINPOW’
   61 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:61:1: note: in expansion of macro ‘MAXMINPOW’
   61 | MAXMINPOW(double, long, double)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘float Foam::max(float, float)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:62:1: note: in expansion of macro ‘MAXMINPOW’
   62 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:62:1: note: in expansion of macro ‘MAXMINPOW’
   62 | MAXMINPOW(float, float, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘float Foam::max(float, int)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:63:1: note: in expansion of macro ‘MAXMINPOW’
   63 | MAXMINPOW(float, float, int)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘float Foam::max(int, float)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘int’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:64:1: note: in expansion of macro ‘MAXMINPOW’
   64 | MAXMINPOW(float, int, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘float Foam::max(float, long int)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘float’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:65:1: note: in expansion of macro ‘MAXMINPOW’
   65 | MAXMINPOW(float, float, long)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:16: note: candidate: ‘float Foam::max(long int, float)’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/int.H:59:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘long int’
   59 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:46:1: note: in expansion of macro ‘MAXMIN’
   46 | MAXMIN(RetType, Type1, Type2)                           \
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/doubleFloat.H:66:1: note: in expansion of macro ‘MAXMINPOW’
   66 | MAXMINPOW(float, long, float)
      | ^~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint8_t Foam::max(uint8_t, uint8_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint8_t’ {aka ‘unsigned char’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:65:1: note: in expansion of macro ‘MAXMIN’
   65 | MAXMIN(uint8_t, uint8_t, uint8_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint16_t Foam::max(uint16_t, uint16_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint16_t’ {aka ‘short unsigned int’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:66:1: note: in expansion of macro ‘MAXMIN’
   66 | MAXMIN(uint16_t, uint16_t, uint16_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint32_t Foam::max(uint32_t, uint32_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:68:1: note: in expansion of macro ‘MAXMIN’
   68 | MAXMIN(uint32_t, uint32_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint32_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:69:1: note: in expansion of macro ‘MAXMIN’
   69 | MAXMIN(uint64_t, uint64_t, uint32_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint32_t, uint64_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint32_t’ {aka ‘unsigned int’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:70:1: note: in expansion of macro ‘MAXMIN’
   70 | MAXMIN(uint64_t, uint32_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:16: note: candidate: ‘uint64_t Foam::max(uint64_t, uint64_t)’
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:60:32: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘uint64_t’ {aka ‘long unsigned int’}
   60 | inline RetType max(const Type1 s1, const Type2 s2)                             \
      |                    ~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/uint.H:71:1: note: in expansion of macro ‘MAXMIN’
   71 | MAXMIN(uint64_t, uint64_t, uint64_t)
      | ^~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:116:13: note: candidate: ‘Foam::zero Foam::max(const zero&, const zero&)’
  116 | inline zero max(const zero&, const zero&)
      |             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/zeroI.H:116:17: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::zero&’
  116 | inline zero max(const zero&, const zero&)
      |                 ^~~~~~~~~~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:123:29: note: candidate: ‘constexpr const Foam::one& Foam::max(const one&, const one&)’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                             ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/oneI.H:123:44: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::one&’
  123 | inline constexpr const one& max(const one& o, const one&) noexcept
      |                                 ~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.H:437:7: note: candidate: ‘Foam::label Foam::max(const labelHashSet&, label)’
  437 | label max(const labelHashSet& set, label maxValue = labelMin);
      |       ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/HashSet.H:437:31: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::labelHashSet&’ {aka ‘const Foam::HashSet<int, Foam::Hash<int> >&’}
  437 | label max(const labelHashSet& set, label maxValue = labelMin);
      |           ~~~~~~~~~~~~~~~~~~~~^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:232:23: note: candidate: ‘const Foam::complex& Foam::max(const complex&, const complex&)’
  232 | inline const complex& max(const complex& c1, const complex& c2)
      |                       ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/complexI.H:232:42: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::complex&’
  232 | inline const complex& max(const complex& c1, const complex& c2)
      |                           ~~~~~~~~~~~~~~~^~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:358:14: note: candidate: ‘Foam::dimensionSet Foam::max(const dimensionSet&, const dimensionSet&)’
  358 | dimensionSet max(const dimensionSet& a, const dimensionSet& b);
      |              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/dimensionSet.H:358:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::dimensionSet&’
  358 | dimensionSet max(const dimensionSet& a, const dimensionSet& b);
      |                  ~~~~~~~~~~~~~~~~~~~~^
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:176:14: note: candidate: ‘Foam::orientedType Foam::max(const orientedType&, const orientedType&)’
  176 | orientedType max(const orientedType& a, const orientedType& b);
      |              ^~~
/home/tawfiq/OpenFOAM/OpenFOAM-2412/src/OpenFOAM/lnInclude/orientedType.H:176:38: note:   no known conversion for argument 1 from ‘Foam::tmp<Foam::Field<double> >’ to ‘const Foam::orientedType&’
  176 | orientedType max(const orientedType& a, const orientedType& b);
      |                  ~~~~~~~~~~~~~~~~~~~~^
make: *** [/home/tawfiq/OpenFOAM/OpenFOAM-2412/wmake/rules/General/transform:38: Make/linux64GccDPInt32Opt/ttt.o] Error 1
